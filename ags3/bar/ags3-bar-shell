#!/nix/store/lb33m49aslmvkx5l4xrkiy7m6nbh2kqf-bash-interactive-5.3p0/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

cat <<EOF | base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland: Hyprland2, Monitor, Workspace }) => {
  patch(Hyprland2.prototype, "binds");
  patch(Hyprland2.prototype, "monitors");
  patch(Hyprland2.prototype, "workspaces");
  patch(Hyprland2.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray: Tray2 }) => {
  patch(Tray2.prototype, "items");
});

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function getter2(getter2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return getter2;
  };
}
function setter(typeDeclaration) {
  return function setter2(setter2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return setter2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout2) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout2) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
var empty = Symbol("empty computed value");
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio2.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio2.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter2 = `get_${prop.replaceAll("-", "_")}`;
      if (getter2 in object && typeof object[getter2] === "function") {
        return object[getter2]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (child) {
    if (!(child instanceof GObject5.Object)) {
      child = env.textNode(child);
    }
    env.appendChild(parent, child);
  }
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function remove2(child) {
    fragment.remove(child);
    if (scope) scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child);
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(v) {
    for (const child of fragment) {
      remove2(child);
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.append(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    dispose();
    for (const child of fragment) {
      remove2(child);
    }
  });
  return fragment;
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw }) => Adw.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a7;
        this.connect("shutdown", dispose);
        (_a7 = __privateGet(this, _main)) == null ? void 0 : _a7.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons) app.add_icons(icons);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// sass:/home/blake/.config/ags2/bar/bar/style.scss
var style_default = '* {\n  color: #ebdbb2;\n  background-color: #282828;\n  font-family: "Cousine Nerd Font Mono";\n  font-size: 15px;\n  font-weight: 600;\n}\n\nbutton {\n  all: unset;\n  min-width: 0;\n  padding: 0;\n  border: 0;\n}\n\n.bar {\n  border-bottom: 2px solid #fa6b34;\n  padding: 6px;\n}\n\nbutton.focused label, .fullscreen {\n  color: #fa6b34;\n  background-color: #282828;\n}\n\n.network {\n  min-width: 85px;\n}';

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/process.ts
import Gio4 from "gi://Gio?version=2.0";
import GLib5 from "gi://GLib?version=2.0";
var _exit_dec, _stderr_dec, _stdout_dec, _a5, _Process_decorators, _init3, _encoder, _outStream, _errStream, _inStream, _process, _Process_instances, readStream_fn;
_Process_decorators = [register()];
var _Process = class _Process extends (_a5 = GObject.Object, _stdout_dec = [signal(String)], _stderr_dec = [signal(String)], _exit_dec = [signal(Number, Boolean)], _a5) {
  constructor({ argv }) {
    super();
    __runInitializers(_init3, 5, this);
    __privateAdd(this, _Process_instances);
    __privateAdd(this, _encoder, new TextEncoder());
    __privateAdd(this, _outStream);
    __privateAdd(this, _errStream);
    __privateAdd(this, _inStream);
    __privateAdd(this, _process);
    const process = __privateSet(this, _process, Gio4.Subprocess.new(
      argv,
      Gio4.SubprocessFlags.STDIN_PIPE | Gio4.SubprocessFlags.STDOUT_PIPE | Gio4.SubprocessFlags.STDERR_PIPE
    ));
    __privateSet(this, _inStream, Gio4.DataOutputStream.new(process.get_stdin_pipe()));
    __privateSet(this, _outStream, Gio4.DataInputStream.new(process.get_stdout_pipe()));
    __privateSet(this, _errStream, Gio4.DataInputStream.new(process.get_stderr_pipe()));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _outStream));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _errStream));
    process.wait_async(null, (_, res) => {
      try {
        process.wait_finish(res);
      } catch {
      }
      if (process.get_if_exited()) {
        this.exit(process.get_exit_status(), false);
      }
      if (process.get_if_signaled()) {
        this.exit(process.get_term_sig(), true);
      }
    });
  }
  stdout(out) {
  }
  stderr(err) {
  }
  exit(code, signaled) {
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  /**
   * Force quit the subprocess.
   */
  kill() {
    __privateGet(this, _process).force_exit();
  }
  /**
   * Send a signal to the subprocess.
   *
   * @param signal Signal number to be sent
   */
  signal(signal2) {
    __privateGet(this, _process).send_signal(signal2);
  }
  /**
   * Write a line to the subprocess' stdin synchronously.
   *
   * @param str String to be written to stdin
   */
  write(str) {
    __privateGet(this, _inStream).put_string(str);
  }
  /**
   * Write a line to the subprocess' stdin asynchronously.
   *
   * @param str String to be written to stdin
   */
  async writeAsync(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_all_async(
        __privateGet(this, _encoder).encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(void __privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Start a new subprocess with the given command.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   */
  static subprocessv(cmd) {
    return new _Process({ argv: cmd });
  }
  /**
   * Start a new subprocess with the given command
   * which is parsed using {@link GLib.shell_parse_argv}.
   */
  static subprocess(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.subprocessv(argv);
  }
  /**
   * Execute a command synchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execv(cmd) {
    const process = Gio4.Subprocess.new(
      cmd,
      Gio4.SubprocessFlags.STDERR_PIPE | Gio4.SubprocessFlags.STDOUT_PIPE
    );
    const [, out, err] = process.communicate_utf8(null, null);
    if (process.get_successful()) {
      return out.trim();
    } else {
      throw new Error(err);
    }
  }
  /**
   * Execute a command synchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static exec(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execv(argv);
  }
  /**
   * Execute a command asynchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsyncv(cmd) {
    const process = Gio4.Subprocess.new(
      cmd,
      Gio4.SubprocessFlags.STDERR_PIPE | Gio4.SubprocessFlags.STDOUT_PIPE
    );
    return new Promise((resolve, reject) => {
      process.communicate_utf8_async(null, null, (_, res) => {
        try {
          const [, out, err] = process.communicate_utf8_finish(res);
          if (process.get_successful()) {
            return resolve(out.trim());
          } else {
            reject(new Error(err.trim()));
          }
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  /**
   * Execute a command asynchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsync(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execAsyncv(argv);
  }
};
_init3 = __decoratorStart(_a5);
_encoder = new WeakMap();
_outStream = new WeakMap();
_errStream = new WeakMap();
_inStream = new WeakMap();
_process = new WeakMap();
_Process_instances = new WeakSet();
readStream_fn = function(stream) {
  stream.read_line_async(GLib5.PRIORITY_DEFAULT, null, (_, res) => {
    try {
      const [output] = stream.read_line_finish_utf8(res);
      if (output !== null) {
        if (stream === __privateGet(this, _errStream)) {
          this.stderr(output.trim());
        } else {
          this.stdout(output.trim());
        }
        __privateMethod(this, _Process_instances, readStream_fn).call(this, stream);
      }
    } catch (error) {
      console.error(error);
    }
  });
};
__decorateElement(_init3, 1, "stdout", _stdout_dec, _Process);
__decorateElement(_init3, 1, "stderr", _stderr_dec, _Process);
__decorateElement(_init3, 1, "exit", _exit_dec, _Process);
_Process = __decorateElement(_init3, 0, "Process", _Process_decorators, _Process);
__runInitializers(_init3, 1, _Process);
var Process = _Process;
function subprocess(argsOrCmd, onOut = print, onErr = printerr) {
  const args = Array.isArray(argsOrCmd) || typeof argsOrCmd === "string";
  const { cmd, err, out } = {
    cmd: args ? argsOrCmd : argsOrCmd.cmd,
    err: args ? onErr : argsOrCmd.err || onErr,
    out: args ? onOut : argsOrCmd.out || onOut
  };
  const proc = Array.isArray(cmd) ? Process.subprocessv(cmd) : Process.subprocess(cmd);
  proc.connect("stdout", (_, stdout) => out(stdout));
  proc.connect("stderr", (_, stderr) => err(stderr));
  return proc;
}
function execAsync(cmd) {
  if (Array.isArray(cmd)) {
    return Process.execAsyncv(cmd);
  } else {
    return Process.execAsync(cmd);
  }
}
function createSubprocess(init, exec, transform) {
  let currentValue = init;
  let proc = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    if (subscribers.size === 0) {
      proc = subprocess(exec, (stdout) => {
        const value = transform ? transform(stdout, currentValue) : stdout;
        if (currentValue !== value) {
          currentValue = value;
          Array.from(subscribers).forEach((cb) => cb());
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        proc?.kill();
        proc = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/time.ts
var _cancelled_dec, _now_dec, _a6, _Timer_decorators, _init4;
_Timer_decorators = [register()];
var _Timer = class _Timer extends (_a6 = GObject.Object, _now_dec = [signal()], _cancelled_dec = [signal()], _a6) {
  constructor() {
    super(...arguments);
    __runInitializers(_init4, 5, this);
  }
  now() {
  }
  cancelled() {
  }
  static interval(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (immediate.is_destroyed()) immediate.destroy();
      if (source.is_destroyed()) source.destroy();
    });
    const immediate = setTimeout(now);
    const source = setInterval(now, interval2);
    return timer;
  }
  static timeout(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now, interval2);
    return timer;
  }
  static idle(callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now);
    return timer;
  }
  static new(onNow, onCancelled) {
    const timer = new _Timer();
    const now = timer.connect("now", () => void onNow?.());
    const cancelled = timer.connect("cancelled", () => {
      timer.disconnect(now);
      timer.disconnect(cancelled);
      onCancelled?.();
    });
    return { timer, now: () => timer.now() };
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  cancel() {
    this.cancelled();
  }
};
_init4 = __decoratorStart(_a6);
__decorateElement(_init4, 1, "now", _now_dec, _Timer);
__decorateElement(_init4, 1, "cancelled", _cancelled_dec, _Timer);
_Timer = __decorateElement(_init4, 0, "Timer", _Timer_decorators, _Timer);
__runInitializers(_init4, 1, _Timer);
var Timer = _Timer;
var { interval, timeout, idle } = Timer;
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function set2(value) {
    if (value !== currentValue) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  }
  function compute() {
    if (typeof execOrFn === "function") {
      const value = execOrFn(currentValue);
      if (value instanceof Promise) {
        value.then(set2);
      } else {
        set2(value);
      }
    } else {
      execAsync(execOrFn).then((stdout) => {
        set2(transform ? transform(stdout, currentValue) : stdout);
      });
    }
  }
  function subscribe(callback) {
    if (subscribers.size === 0) {
      setTimeout(compute);
      timer = setInterval(compute, ival);
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0 && timer) {
        clearInterval(timer);
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio5 from "gi://Gio?version=2.0";
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio5.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio5.MenuItem && parent instanceof Gio5.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../../nix/store/77din6z4bjmwl681lgn26by0748jy4mj-ags-js-lib/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// widget/DateDisplay.tsx
function DateDisplay() {
  const time = createPoll("", 1e3, "date '+%_I:%M'");
  const date = createPoll("", 1e3, "date '+%_m/%_d/%Y'");
  const [showingDate, setShowingDate] = createState(false);
  const toggleDate = () => {
    setShowingDate((d) => !d);
  };
  return /* @__PURE__ */ jsx(With, { value: showingDate, children: (isShowingDate) => /* @__PURE__ */ jsx(
    "button",
    {
      hexpand: true,
      halign: Gtk2.Align.END,
      onClicked: toggleDate,
      children: /* @__PURE__ */ jsx("label", { label: isShowingDate ? date : time })
    }
  ) });
}

// widget/Hyprland.tsx
import Hyprland from "gi://AstalHyprland";
function HyprlandTitle() {
  const hypr = Hyprland.get_default();
  const focusedClientBind = createBinding(hypr, "focusedClient");
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: focusedClientBind, children: (focusedClient) => {
    const titleBind = createBinding(focusedClient, "title");
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: titleBind, children: (title) => /* @__PURE__ */ jsx("label", { label: title }) }) });
  } }) });
}
function HyprlandFullscreen() {
  const hypr = Hyprland.get_default();
  const focusedClientBind = createBinding(hypr, "focusedClient");
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: focusedClientBind, children: (client) => {
    const fullscreenBind = createBinding(client, "fullscreen");
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: fullscreenBind, children: (fullscreen) => /* @__PURE__ */ jsx("label", { class: "fullscreen", label: fullscreen > 0 ? "F" : "" }) }) });
  } }) });
}
function HyprlandWorkspaces() {
  const hypr = Hyprland.get_default();
  const workspaces = createBinding(hypr, "workspaces").as((wss) => wss.sort((a, b) => a.id - b.id));
  const focusedWorkspace = createBinding(hypr, "focusedWorkspace");
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: focusedWorkspace, children: (focusedWs) => /* @__PURE__ */ jsx("box", { spacing: 8, children: /* @__PURE__ */ jsx(For, { each: workspaces, children: (ws, _) => /* @__PURE__ */ jsx(
    "button",
    {
      onClicked: () => ws.focus(),
      class: ws === focusedWs ? "focused" : "",
      children: ws.name
    }
  ) }) }) }) });
}

// widget/StatusMonitors.tsx
var labeled = (lbl, widget) => /* @__PURE__ */ jsxs("box", { spacing: 4, children: [
  /* @__PURE__ */ jsx("label", { label: lbl }),
  widget
] });
function CpuMonitor() {
  const cpu = createSubprocess("", "cpu-pct.sh", (x) => x);
  return labeled("C:", /* @__PURE__ */ jsx(With, { value: cpu, children: (cpu2) => /* @__PURE__ */ jsx("label", { label: cpu2 }) }));
}
function MemoryMonitor() {
  const memory = createPoll("", 2e3, "free", (out) => {
    const memLine = out.split("\n").find((line) => line.includes("Mem:"));
    const tokens = memLine ? memLine.split(/\s+/) : ["1", "0"];
    const avail = parseInt(tokens[2]);
    const used = parseInt(tokens[1]);
    return `${Math.round(100 * avail / used)}`;
  });
  return labeled("M:", /* @__PURE__ */ jsx(With, { value: memory, children: (mem) => /* @__PURE__ */ jsx("label", { label: mem }) }));
}
function VolumeMonitor() {
  const vol = createPoll("", 2e3, "pamixer --get-volume");
  return labeled("M:", /* @__PURE__ */ jsx(With, { value: vol, children: (vol2) => /* @__PURE__ */ jsx("label", { label: vol2 }) }));
}
function NetMonitor() {
  const net = createSubprocess("", "network-traffic.sh", (x) => x);
  return labeled("N: ", /* @__PURE__ */ jsx(With, { value: net, children: (net2) => /* @__PURE__ */ jsx(
    "label",
    {
      class: "network",
      hexpand: false,
      halign: Gtk2.Align.CENTER,
      label: net2
    }
  ) }));
}
function StatusMonitors() {
  return /* @__PURE__ */ jsxs("box", { spacing: 12, children: [
    /* @__PURE__ */ jsx(CpuMonitor, {}),
    /* @__PURE__ */ jsx(MemoryMonitor, {}),
    /* @__PURE__ */ jsx(VolumeMonitor, {}),
    /* @__PURE__ */ jsx(NetMonitor, {})
  ] });
}

// widget/Tray.tsx
import AstalTray from "gi://AstalTray";
function Tray() {
  const tray = AstalTray.get_default();
  const items = createBinding(tray, "items");
  const init = (btn, item) => {
    btn.menuModel = item.menuModel;
    btn.insert_action_group("dbusmenu", item.actionGroup);
    item.connect("notify::action-group", () => {
      btn.insert_action_group("dbusmenu", item.actionGroup);
    });
  };
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsx("menubutton", { $: (self) => init(self, item), children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") }) }) }) });
}

// widget/Bar.tsx
function Bar(gdkmonitor) {
  const { TOP, LEFT, RIGHT } = Astal.WindowAnchor;
  const rightBox = /* @__PURE__ */ jsxs(
    "box",
    {
      halign: Gtk2.Align.END,
      spacing: 14,
      homogeneous: false,
      children: [
        /* @__PURE__ */ jsx(StatusMonitors, {}),
        /* @__PURE__ */ jsx(Tray, {}),
        /* @__PURE__ */ jsx(DateDisplay, {})
      ]
    }
  );
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "bar",
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: TOP | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssName: "centerbox", children: [
        /* @__PURE__ */ jsxs("box", { spacing: 8, $type: "start", children: [
          /* @__PURE__ */ jsx(HyprlandWorkspaces, {}),
          /* @__PURE__ */ jsx("box", { halign: Gtk2.Align.END, children: /* @__PURE__ */ jsx(HyprlandFullscreen, {}) })
        ] }),
        /* @__PURE__ */ jsx("box", { $type: "center", children: /* @__PURE__ */ jsx(HyprlandTitle, {}) }),
        /* @__PURE__ */ jsx("box", { $type: "end", children: rightBox })
      ] })
    }
  );
}

// app.ts
app_default.start({
  css: style_default,
  main() {
    app_default.get_monitors().map(Bar);
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL292ZXJyaWRlcy50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi9uaXgvc3RvcmUvNzdkaW42ejRiam13bDY4MWxnbjI2YnkwNzQ4ank0bWotYWdzLWpzLWxpYi9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2dvYmplY3QudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL25peC9zdG9yZS83N2RpbjZ6NGJqbXdsNjgxbGduMjZieTA3NDhqeTRtai1hZ3MtanMtbGliL2xpYi9ndGs0L2FwcC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi9uaXgvc3RvcmUvNzdkaW42ejRiam13bDY4MWxnbjI2YnkwNzQ4ank0bWotYWdzLWpzLWxpYi9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2RidXMudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL25peC9zdG9yZS83N2RpbjZ6NGJqbXdsNjgxbGduMjZieTA3NDhqeTRtai1hZ3MtanMtbGliL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi9uaXgvc3RvcmUvNzdkaW42ejRiam13bDY4MWxnbjI2YnkwNzQ4ank0bWotYWdzLWpzLWxpYi9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi9uaXgvc3RvcmUvNzdkaW42ejRiam13bDY4MWxnbjI2YnkwNzQ4ank0bWotYWdzLWpzLWxpYi9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi9uaXgvc3RvcmUvNzdkaW42ejRiam13bDY4MWxnbjI2YnkwNzQ4ank0bWotYWdzLWpzLWxpYi9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9lbnYudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL25peC9zdG9yZS83N2RpbjZ6NGJqbXdsNjgxbGduMjZieTA3NDhqeTRtai1hZ3MtanMtbGliL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICJzYXNzOi9ob21lL2JsYWtlLy5jb25maWcvYWdzMi9iYXIvYmFyL3N0eWxlLnNjc3MiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL3Byb2Nlc3MudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbGliL2d0azQvanN4LXJ1bnRpbWUudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vbml4L3N0b3JlLzc3ZGluNno0Ymptd2w2ODFsZ24yNmJ5MDc0OGp5NG1qLWFncy1qcy1saWIvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9ndGs0L2pzeC1ydW50aW1lLnRzIiwgIndpZGdldC9EYXRlRGlzcGxheS50c3giLCAid2lkZ2V0L0h5cHJsYW5kLnRzeCIsICJ3aWRnZXQvU3RhdHVzTW9uaXRvcnMudHN4IiwgIndpZGdldC9UcmF5LnRzeCIsICJ3aWRnZXQvQmFyLnRzeCIsICJhcHAudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFRyYXlcIiksICh7IFRyYXkgfSkgPT4ge1xuICAgIHBhdGNoKFRyYXkucHJvdG90eXBlLCBcIml0ZW1zXCIpXG59KVxuIiwgIi8qKlxuICogSW4gdGhlIGZ1dHVyZSBJIHdvdWxkIGxpa2UgdG8gbWFrZSB0eXBlIGRlY2xhcmF0aW9uIGluIGRlY29yYXRvcnMgb3B0aW9uYWxcbiAqIGFuZCBpbmZlciBpdCBmcm9tIHR5cGVzY3JpcHQgdHlwZXMgYXQgdHJhbnNwaWxlIHRpbWUuIEN1cnJlbnRseSwgd2UgY291bGRcbiAqIGVpdGhlciB1c2Ugc3RhZ2UgMiBkZWNvcmF0b3JzIHdpdGggdGhlIFwiZW1pdERlY29yYXRvck1ldGFkYXRhXCIgYW5kXG4gKiBcImV4cGVyaW1lbnRhbERlY29yYXRvcnNcIiB0c2NvbmZpZyBvcHRpb25zLiBIb3dldmVyLCBtZXRhZGF0YSBpcyBub3Qgc3VwcG9ydGVkXG4gKiBieSBlc2J1aWxkIHdoaWNoIGlzIHdoYXQgSSdtIG1vc3RseSB0YXJnZXRpbmcgYXMgdGhlIGJ1bmRsZXIgZm9yIHBlcmZvcm1hbmNlXG4gKiByZWFzb25zLiBodHRwczovL2dpdGh1Yi5jb20vZXZhbncvZXNidWlsZC9pc3N1ZXMvMjU3XG4gKiBIb3dldmVyLCBJIGJlbGlldmUgdGhhdCB3ZSBzaG91bGQgbm90IHVzZSBzdGFnZSAyIGFueW1vcmUsXG4gKiBzbyBJJ20gd2FpdGluZyBmb3IgYSBiZXR0ZXIgYWx0ZXJuYXRpdmUuXG4gKi9cblxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IGRlZmluZVByb3BlcnR5R2V0dGVyLCBrZWJhYmlmeSB9IGZyb20gXCIuL3V0aWwuanNcIlxuXG5jb25zdCBwcml2ID0gU3ltYm9sKFwiZ29iamVjdCBwcml2YXRlXCIpXG5jb25zdCB7IGRlZmluZVByb3BlcnR5LCBmcm9tRW50cmllcywgZW50cmllcyB9ID0gT2JqZWN0XG5jb25zdCB7IE9iamVjdDogR09iaiwgcmVnaXN0ZXJDbGFzcyB9ID0gR09iamVjdFxuXG5leHBvcnQgeyBHT2JqZWN0IGFzIGRlZmF1bHQgfVxuZXhwb3J0IHsgR09iaiBhcyBPYmplY3QgfVxuXG5leHBvcnQgY29uc3QgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5leHBvcnQgdHlwZSBTaWduYWxGbGFncyA9IEdPYmplY3QuU2lnbmFsRmxhZ3NcblxuZXhwb3J0IGNvbnN0IEFjY3VtdWxhdG9yVHlwZSA9IEdPYmplY3QuQWNjdW11bGF0b3JUeXBlXG5leHBvcnQgdHlwZSBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuXG5leHBvcnQgdHlwZSBQYXJhbVNwZWM8VCA9IHVua25vd24+ID0gR09iamVjdC5QYXJhbVNwZWM8VD5cbmV4cG9ydCBjb25zdCBQYXJhbVNwZWMgPSBHT2JqZWN0LlBhcmFtU3BlY1xuXG5leHBvcnQgdHlwZSBQYXJhbUZsYWdzID0gR09iamVjdC5QYXJhbUZsYWdzXG5leHBvcnQgY29uc3QgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuXG5leHBvcnQgdHlwZSBHVHlwZTxUID0gdW5rbm93bj4gPSBHT2JqZWN0LkdUeXBlPFQ+XG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5cbmludGVyZmFjZSBHT2JqUHJpdmF0ZSBleHRlbmRzIEdPYmoge1xuICAgIFtwcml2XTogUmVjb3JkPHN0cmluZywgYW55PlxufVxuXG50eXBlIE1ldGEgPSB7XG4gICAgcHJvcGVydGllcz86IHtcbiAgICAgICAgW2ZpZWxkTmFtZTogc3RyaW5nXToge1xuICAgICAgICAgICAgZmxhZ3M6IFBhcmFtRmxhZ3NcbiAgICAgICAgICAgIHR5cGU6IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2lnbmFscz86IHtcbiAgICAgICAgW2tleTogc3RyaW5nXToge1xuICAgICAgICAgICAgZGVmYXVsdD86IGJvb2xlYW5cbiAgICAgICAgICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICAgICAgICAgIGFjY3VtdWxhdG9yPzogQWNjdW11bGF0b3JUeXBlXG4gICAgICAgICAgICByZXR1cm5fdHlwZT86IEdUeXBlXG4gICAgICAgICAgICBwYXJhbV90eXBlcz86IEFycmF5PEdUeXBlPlxuICAgICAgICAgICAgbWV0aG9kOiAoLi4uYXJnOiBhbnlbXSkgPT4gdW5rbm93blxuICAgICAgICB9XG4gICAgfVxufVxuXG50eXBlIENvbnRleHQgPSB7IHByaXZhdGU6IGZhbHNlOyBzdGF0aWM6IGZhbHNlOyBuYW1lOiBzdHJpbmcgfVxudHlwZSBQcm9wZXJ0eUNvbnRleHQ8VD4gPSBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgR2V0dGVyQ29udGV4dDxUPiA9IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgU2V0dGVyQ29udGV4dDxUPiA9IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgU2lnbmFsQ29udGV4dDxUIGV4dGVuZHMgKCkgPT4gYW55PiA9IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcblxudHlwZSBTaWduYWxPcHRpb25zID0ge1xuICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgZmxhZ3M/OiBTaWduYWxGbGFnc1xuICAgIGFjY3VtdWxhdG9yPzogQWNjdW11bGF0b3JUeXBlXG59XG5cbnR5cGUgUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4gPVxuICAgIHwgKChuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzKSA9PiBQYXJhbVNwZWM8VD4pXG4gICAgfCBQYXJhbVNwZWM8VD5cbiAgICB8IHsgJGd0eXBlOiBHVHlwZTxUPiB9XG5cbmZ1bmN0aW9uIGFzc2VydEZpZWxkKFxuICAgIGN0eDogQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQgfCBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQgfCBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQsXG4pOiBzdHJpbmcge1xuICAgIGlmIChjdHgucHJpdmF0ZSkgdGhyb3cgRXJyb3IoXCJwcml2YXRlIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgIGlmICh0eXBlb2YgY3R4Lm5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZ3MgY2FuIGJlIGdvYmplY3QgcHJvcGVydHkga2V5c1wiKVxuICAgIH1cblxuICAgIHJldHVybiBjdHgubmFtZVxufVxuXG4vKipcbiAqIERlZmluZXMgYSByZWFkYWJsZSAqYW5kKiB3cml0ZWFibGUgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBwcm9wZXJ0eShTdHJpbmcpIG15UHJvcCA9IFwiXCJcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHk8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIF86IHZvaWQsXG4gICAgICAgIGN0eDogUHJvcGVydHlDb250ZXh0PFQ+LFxuICAgICAgICBvcHRpb25zPzogeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICk6ICh0aGlzOiBHT2JqLCBpbml0OiBUKSA9PiBUIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBrZXkgPSBrZWJhYmlmeShmaWVsZE5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG5cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzID8/PSB7fVxuICAgICAgICBtZXRhLnByb3BlcnRpZXNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBRFdSSVRFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBmaWVsZE5hbWUgYXMgRXh0cmFjdDxrZXlvZiBHT2JqLCBzdHJpbmc+KVxuXG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm1ldGFPbmx5KSByZXR1cm5cblxuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgZmllbGROYW1lLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNldCh2OiBUKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3ByaXZdW2tleV0gIT09IHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcHJpdl1ba2V5XSA9IHZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IFQge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcml2XVtrZXldXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPEdPYmpQcml2YXRlPilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGluaXQ6IFQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpY3QgPSAoKHRoaXMgYXMgR09ialByaXZhdGUpW3ByaXZdID8/PSB7fSlcbiAgICAgICAgICAgIGRpY3Rba2V5XSA9IGluaXRcbiAgICAgICAgICAgIHJldHVybiBpbml0XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHJlYWQtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIGdldHRlciBoYXMgYSBzZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIHNldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHJlYWRhYmxlICphbmQqIHdyaXRlYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiBnZXR0ZXIoZ2V0dGVyOiAodGhpczogR09iaikgPT4gVCwgY3R4OiBHZXR0ZXJDb250ZXh0PFQ+KTogKHRoaXM6IEdPYmopID0+IFQge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHByb3BzID0gKG1ldGEucHJvcGVydGllcyA/Pz0ge30pXG4gICAgICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV1cbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGUgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldHRlclxuICAgIH1cbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgd3JpdGUtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIHNldHRlciBoYXMgYSBnZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIGdldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHdyaXRlYWJsZSAqYW5kKiByZWFkYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiBzZXR0ZXIoXG4gICAgICAgIHNldHRlcjogKHRoaXM6IEdPYmosIHZhbHVlOiBUKSA9PiB2b2lkLFxuICAgICAgICBjdHg6IFNldHRlckNvbnRleHQ8VD4sXG4gICAgKTogKHRoaXM6IEdPYmosIHZhbHVlOiBUKSA9PiB2b2lkIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLldSSVRBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLldSSVRBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZXR0ZXJcbiAgICB9XG59XG5cbnR5cGUgUGFyYW1UeXBlPFA+ID0gUCBleHRlbmRzIHsgJGd0eXBlOiBHVHlwZTxpbmZlciBUPiB9ID8gVCA6IFAgZXh0ZW5kcyBHVHlwZTxpbmZlciBUPiA/IFQgOiBuZXZlclxuXG50eXBlIFBhcmFtVHlwZXM8UGFyYW1zPiA9IHtcbiAgICBbSyBpbiBrZXlvZiBQYXJhbXNdOiBQYXJhbVR5cGU8UGFyYW1zW0tdPlxufVxuXG4vKipcbiAqIERlZmluZXMgYSBzaWduYWwgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzaWduYWwoW1N0cmluZywgTnVtYmVyXSwgQm9vbGVhbiwge1xuICogICAgICAgICBhY2N1bXVsYXRvcjogQWNjdW11bGF0b3JUeXBlLkZJUlNUX1dJTlNcbiAqICAgICB9KVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiBib29sZWFuIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgICAgIHJldHVybiBmYWxzZVxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPFxuICAgIGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGU+LFxuICAgIFJldHVybiBleHRlbmRzIHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGUsXG4+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIHJldHVyblR5cGU/OiBSZXR1cm4sXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnMsXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iaiwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiBQYXJhbVR5cGU8UmV0dXJuPixcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2RcblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFN0cmluZywgTnVtYmVyKVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiB2b2lkIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8UGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4+KFxuICAgIC4uLnBhcmFtczogUGFyYW1zXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iamVjdC5PYmplY3QsIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2RcblxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxcbiAgICBQYXJhbXMgZXh0ZW5kcyBBcnJheTx7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlPixcbiAgICBSZXR1cm4gZXh0ZW5kcyB7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlLFxuPihcbiAgICAuLi5hcmdzOiBQYXJhbXMgfCBbcGFyYW1zOiBQYXJhbXMsIHJldHVyblR5cGU/OiBSZXR1cm4sIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zXVxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gUGFyYW1UeXBlPFJldHVybj4gfCB2b2lkLFxuICAgIGN0eDogU2lnbmFsQ29udGV4dDx0eXBlb2YgbWV0aG9kPixcbikgPT4gdHlwZW9mIG1ldGhvZCB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtZXRob2QsIGN0eCkge1xuICAgICAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICAgICAgaWYgKGN0eC5zdGF0aWMpIHRocm93IEVycm9yKFwic3RhdGljIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuXG4gICAgICAgIGlmICh0eXBlb2YgY3R4Lm5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHNpZ25hbHNcIilcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNpZ25hbE5hbWUgPSBrZWJhYmlmeShjdHgubmFtZSlcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLnNpZ25hbHMgPz89IHt9KVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZ3NbMF0pKSB7XG4gICAgICAgICAgICBjb25zdCBbcGFyYW1zLCByZXR1cm5UeXBlLCBvcHRpb25zXSA9IGFyZ3MgYXMgW1xuICAgICAgICAgICAgICAgIHBhcmFtczogUGFyYW1zLFxuICAgICAgICAgICAgICAgIHJldHVyblR5cGU/OiBSZXR1cm4sXG4gICAgICAgICAgICAgICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnMsXG4gICAgICAgICAgICBdXG5cbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IG9wdGlvbnM/LmRlZmF1bHQgPz8gdHJ1ZSxcbiAgICAgICAgICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gKFwiJGd0eXBlXCIgaW4gaSA/IGkuJGd0eXBlIDogaSkpLFxuICAgICAgICAgICAgICAgIC4uLihyZXR1cm5UeXBlICYmIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuX3R5cGU6IFwiJGd0eXBlXCIgaW4gcmV0dXJuVHlwZSA/IHJldHVyblR5cGUuJGd0eXBlIDogcmV0dXJuVHlwZSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAuLi4ob3B0aW9ucz8uZmxhZ3MgJiYge1xuICAgICAgICAgICAgICAgICAgICBmbGFnczogb3B0aW9ucy5mbGFncyxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAuLi4odHlwZW9mIG9wdGlvbnM/LmFjY3VtdWxhdG9yID09PSBcIm51bWJlclwiICYmIHtcbiAgICAgICAgICAgICAgICAgICAgYWNjdW11bGF0b3I6IG9wdGlvbnMuYWNjdW11bGF0b3IsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBhcmdzIGFzIFBhcmFtc1xuICAgICAgICAgICAgc2lnbmFsc1tzaWduYWxOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gKFwiJGd0eXBlXCIgaW4gaSA/IGkuJGd0eXBlIDogaSkpLFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5wYXJhbXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoc2lnbmFsTmFtZSwgLi4ucGFyYW1zKSBhcyBQYXJhbVR5cGU8UmV0dXJuPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5jb25zdCBNQVhJTlQgPSAyICoqIDMxIC0gMVxuY29uc3QgTUlOSU5UID0gLSgyICoqIDMxKVxuY29uc3QgTUFYVUlOVCA9IDIgKiogMzIgLSAxXG5jb25zdCBNQVhGTE9BVCA9IDMuNDAyODIzNWUzOFxuY29uc3QgTUlORkxPQVQgPSAtMy40MDI4MjM1ZTM4XG5jb25zdCBNSU5JTlQ2NCA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG5jb25zdCBNQVhJTlQ2NCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG5cbmZ1bmN0aW9uIHBzcGVjRnJvbUdUeXBlKHR5cGU6IEdUeXBlPHVua25vd24+LCBuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPT0xFQU46XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmJvb2xlYW4obmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIGZhbHNlKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9TVFJJTkc6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5pbnQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTklOVCwgTUFYSU5ULCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9VSU5UOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy51aW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBNQVhVSU5ULCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50NjQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTklOVDY0LCBNQVhJTlQ2NCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDY0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy51aW50NjQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIDAsIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9GTE9BVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZmxvYXQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTkZMT0FULCBNQVhGTE9BVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRE9VQkxFOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5kb3VibGUobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE51bWJlci5NSU5fVkFMVUUsIE51bWJlci5NSU5fVkFMVUUsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0pTT0JKRUNUOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVkFSSUFOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMub2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzIGFzIGFueSwgR0xpYi5WYXJpYW50KVxuXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0VOVU06XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVEVSRkFDRTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfQk9YRUQ6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1BPSU5URVI6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1BBUkFNOlxuICAgICAgICBjYXNlIEdPYmplY3QudHlwZV9mcm9tX25hbWUoXCJHVHlwZVwiKTpcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ3Vlc3MgUGFyYW1TcGVjIGZyb20gR1R5cGUgXCIke3R5cGV9XCJgKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9PQkpFQ1Q6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIHR5cGUpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBwc3BlYyhuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzLCBkZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248dW5rbm93bj4pIHtcbiAgICBpZiAoZGVjbGFyYXRpb24gaW5zdGFuY2VvZiBQYXJhbVNwZWMpIHJldHVybiBkZWNsYXJhdGlvblxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBPYmplY3QgfHwgZGVjbGFyYXRpb24gPT09IEZ1bmN0aW9uIHx8IGRlY2xhcmF0aW9uID09PSBBcnJheSkge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmpzb2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzKVxuICAgIH1cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gU3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuc3RyaW5nKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBcIlwiKVxuICAgIH1cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gTnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAtTnVtYmVyLk1BWF9WQUxVRSwgTnVtYmVyLk1BWF9WQUxVRSwgMClcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IEJvb2xlYW4pIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICB9XG5cbiAgICBpZiAoXCIkZ3R5cGVcIiBpbiBkZWNsYXJhdGlvbikge1xuICAgICAgICByZXR1cm4gcHNwZWNGcm9tR1R5cGUoZGVjbGFyYXRpb24uJGd0eXBlLCBuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRlY2xhcmF0aW9uID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uKG5hbWUsIGZsYWdzKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKFwiaW52YWxpZCBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvblwiKVxufVxuXG50eXBlIE1ldGFJbmZvID0gR09iamVjdC5NZXRhSW5mbzxuZXZlciwgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlPHVua25vd24+IH0+LCBuZXZlcj5cblxuLyoqXG4gKiBSZXBsYWNlbWVudCBmb3Ige0BsaW5rIEdPYmplY3QucmVnaXN0ZXJDbGFzc31cbiAqIFRoaXMgZGVjb3JhdG9yIGNvbnN1bWVzIG1ldGFkYXRhIG5lZWRlZCB0byByZWdpc3RlciB0eXBlcyB3aGVyZSB0aGUgcHJvdmlkZWQgZGVjb3JhdG9ycyBhcmUgdXNlZDpcbiAqIC0ge0BsaW5rIHNpZ25hbH1cbiAqIC0ge0BsaW5rIHByb3BlcnR5fVxuICogLSB7QGxpbmsgZ2V0dGVyfVxuICogLSB7QGxpbmsgc2V0dGVyfVxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogXFxAcmVnaXN0ZXIoeyBHVHlwZU5hbWU6IFwiTXlDbGFzc1wiIH0pXG4gKiBjbGFzcyBNeUNsYXNzIGV4dGVuZHMgR09iamVjdC5PYmplY3QgeyB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyPENscyBleHRlbmRzIHsgbmV3ICguLi5hcmdzOiBhbnkpOiBHT2JqIH0+KG9wdGlvbnM6IE1ldGFJbmZvID0ge30pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNsczogQ2xzLCBjdHg6IENsYXNzRGVjb3JhdG9yQ29udGV4dDxDbHM+KSB7XG4gICAgICAgIGNvbnN0IHQgPSBvcHRpb25zLlRlbXBsYXRlXG5cbiAgICAgICAgaWYgKHR5cGVvZiB0ID09PSBcInN0cmluZ1wiICYmICF0LnN0YXJ0c1dpdGgoXCJyZXNvdXJjZTovL1wiKSAmJiAhdC5zdGFydHNXaXRoKFwiZmlsZTovL1wiKSkge1xuICAgICAgICAgICAgb3B0aW9ucy5UZW1wbGF0ZSA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0KVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgTWV0YVxuXG4gICAgICAgIGNvbnN0IHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBQYXJhbVNwZWM8dW5rbm93bj4+ID0gZnJvbUVudHJpZXMoXG4gICAgICAgICAgICBlbnRyaWVzKG1ldGEucHJvcGVydGllcyA/PyB7fSkubWFwKChbZmllbGROYW1lLCB7IGZsYWdzLCB0eXBlIH1dKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2ViYWJpZnkoZmllbGROYW1lKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNwZWMgPSBwc3BlYyhrZXksIGZsYWdzLCB0eXBlKVxuICAgICAgICAgICAgICAgIHJldHVybiBba2V5LCBzcGVjXVxuICAgICAgICAgICAgfSksXG4gICAgICAgIClcblxuICAgICAgICBjb25zdCBzaWduYWxzID0gZnJvbUVudHJpZXMoXG4gICAgICAgICAgICBlbnRyaWVzKG1ldGEuc2lnbmFscyA/PyB7fSkubWFwKChbc2lnbmFsTmFtZSwgeyBkZWZhdWx0OiBkZWYsIG1ldGhvZCwgLi4uc2lnbmFsIH1dKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRlZikge1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eShjbHMucHJvdG90eXBlLCBgb25fJHtzaWduYWxOYW1lLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gW3NpZ25hbE5hbWUsIHNpZ25hbF1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgZGVsZXRlIG1ldGEucHJvcGVydGllc1xuICAgICAgICBkZWxldGUgbWV0YS5zaWduYWxzXG5cbiAgICAgICAgcmVnaXN0ZXJDbGFzcyh7IC4uLm9wdGlvbnMsIFByb3BlcnRpZXM6IHByb3BzLCBTaWduYWxzOiBzaWduYWxzIH0sIGNscylcbiAgICB9XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICogQXNzZXJ0cyBhIGd0eXBlIGluIGNhc2VzIHdoZXJlIHRoZSB0eXBlIGlzIHRvbyBsb29zZS9zdHJpY3QuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiB0eXBlIFR1cGxlID0gW251bWJlciwgbnVtYmVyXVxuICogY29uc3QgVHVwbGUgPSBndHlwZTxUdXBsZT4oQXJyYXkpXG4gKlxuICogY2xhc3Mge1xuICogICBcXEBwcm9wZXJ0eShUdXBsZSkgdmFsdWUgPSBbMSwgMl0gYXMgVHVwbGVcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3R5cGU8QXNzZXJ0Pih0eXBlOiBHVHlwZTxhbnk+IHwgeyAkZ3R5cGU6IEdUeXBlPGFueT4gfSk6IHtcbiAgICAkZ3R5cGU6IEdUeXBlPEFzc2VydD5cbn0ge1xuICAgIHJldHVybiBcIiRndHlwZVwiIGluIHR5cGUgPyB0eXBlIDogeyAkZ3R5cGU6IHR5cGUgfVxufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgaW50ZXJmYWNlIEZ1bmN0aW9uQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPCguLi5hcmdzOiBhbnlbXSkgPT4gYW55PlxuICAgIH1cblxuICAgIGludGVyZmFjZSBBcnJheUNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxhbnlbXT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgRGF0ZUNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxEYXRlPlxuICAgIH1cblxuICAgIGludGVyZmFjZSBNYXBDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8TWFwPGFueSwgYW55Pj5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgU2V0Q29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPFNldDxhbnk+PlxuICAgIH1cbn1cblxuRnVuY3Rpb24uJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBGdW5jdGlvbkNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5BcnJheS4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIEFycmF5Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbkRhdGUuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBEYXRlQ29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbk1hcC4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIE1hcENvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5TZXQuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBTZXRDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiBrZWJhYmlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCJfXCIsIFwiLVwiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbWVsaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLV9dKC4pL2csIChfLCBjaGFyKSA9PiBjaGFyLnRvVXBwZXJDYXNlKCkpXG59XG5cbmV4cG9ydCB0eXBlIFBhc2NhbGlmeTxTPiA9IFMgZXh0ZW5kcyBgJHtpbmZlciBIZWFkfSR7XCItXCIgfCBcIl9cIn0ke2luZmVyIFRhaWx9YFxuICAgID8gYCR7Q2FwaXRhbGl6ZTxIZWFkPn0ke1Bhc2NhbGlmeTxUYWlsPn1gXG4gICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICA/IENhcGl0YWxpemU8Uz5cbiAgICAgIDogbmV2ZXJcblxuZXhwb3J0IHR5cGUgWG1sTm9kZSA9IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBhdHRyaWJ1dGVzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxuICAgIGNoaWxkcmVuPzogQXJyYXk8WG1sTm9kZT5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHhtbCh7IG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH06IFhtbE5vZGUpIHtcbiAgICBsZXQgYnVpbGRlciA9IGA8JHtuYW1lfWBcblxuICAgIGNvbnN0IGF0dHJzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyA/PyBbXSlcblxuICAgIGlmIChhdHRycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGF0dHJzKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IGAgJHtrZXl9PVwiJHt2YWx1ZX1cImBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCI+XCJcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IHhtbChub2RlKVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIgKz0gYDwvJHtuYW1lfT5gXG4gICAgfSBlbHNlIHtcbiAgICAgICAgYnVpbGRlciArPSBcIiAvPlwiXG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1aWxkZXJcbn1cblxuLy8gQmluZGluZ3Mgd29yayBvdmVyIHByb3BlcnRpZXMgaW4ga2ViYWItY2FzZSBiZWNhdXNlIHRoYXRzIHRoZSBjb252ZW50aW9uIG9mIGdvYmplY3Rcbi8vIGhvd2V2ZXIgaW4ganMgaXRzIGVpdGhlciBzbmFrZV9jYXNlIG9yIGNhbWVsQ2FzZVxuLy8gYWxzbyBvbiBEQnVzIGludGVyZmFjZXMgaXRzIFBhc2NhbENhc2UgYnkgY29udmVudGlvblxuLy8gc28gYXMgYSB3b3JrYXJvdW5kIHdlIHVzZSBnZXRfcHJvcGVydHlfbmFtZSBhbmQgb25seSB1c2UgdGhlIHByb3BlcnR5IGZpZWxkIGFzIGEgZmFsbGJhY2tcbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eUdldHRlcjxUIGV4dGVuZHMgb2JqZWN0PihvYmplY3Q6IFQsIHByb3A6IEV4dHJhY3Q8a2V5b2YgVCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGBnZXRfJHtrZWJhYmlmeShwcm9wKS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogKCkgPT4gb2JqZWN0W3Byb3BdLFxuICAgIH0pXG59XG5cbi8vIGF0dGVtcHQgc2V0dGluZyBhIHByb3BlcnR5IG9mIEdPYmplY3QuT2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gc2V0KG9iajogR09iamVjdC5PYmplY3QsIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgIGNvbnN0IGtleSA9IHNuYWtlaWZ5KHByb3ApXG4gICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcbiAgICBjb25zdCBzZXR0ZXIgPSBgc2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuXG4gICAgbGV0IGN1cnJlbnQ6IHVua25vd25cblxuICAgIGlmIChnZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGN1cnJlbnQgPSAob2JqW2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgPSBvYmpbcHJvcCBhcyBrZXlvZiB0eXBlb2Ygb2JqXVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50ICE9PSB2YWx1ZSkge1xuICAgICAgICBpZiAoc2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW3NldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgOyhvYmpbc2V0dGVyXSBhcyAodjogYW55KSA9PiB2b2lkKSh2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgXCIuLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCwgc2V0dGVyIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IGdldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQXBwREJ1cyB9IGZyb20gXCIuLi9hcHAvZGJ1cy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwiZ25pbVwiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxudHlwZSBTdGFydENvbmZpZyA9IFBhcnRpYWw8e1xuICAgIGluc3RhbmNlTmFtZTogc3RyaW5nXG4gICAgY3NzOiBzdHJpbmdcbiAgICBpY29uczogc3RyaW5nXG4gICAgZ3RrVGhlbWU6IHN0cmluZ1xuICAgIGljb25UaGVtZTogc3RyaW5nXG4gICAgY3Vyc29yVGhlbWU6IHN0cmluZ1xuICAgIG1haW4oLi4uYXJndjogc3RyaW5nW10pOiB2b2lkXG4gICAgcmVxdWVzdEhhbmRsZXIoYXJndjogc3RyaW5nW10sIHJlczogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQpOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXBwU2lnbmFscyBleHRlbmRzIEd0ay5BcHBsaWNhdGlvbi5TaWduYWxTaWduYXR1cmVzIHtcbiAgICByZXF1ZXN0OiBBcHBbXCJyZXF1ZXN0XCJdXG59XG5cbkByZWdpc3RlcigpXG5jbGFzcyBBcHAgZXh0ZW5kcyBHdGsuQXBwbGljYXRpb24ge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEFwcFNpZ25hbHNcblxuICAgICNpbnN0YW5jZU5hbWUgPSBcImFnc1wiXG4gICAgI21haW4/OiAoLi4uYXJndjogc3RyaW5nW10pID0+IHZvaWRcbiAgICAjcmVxdWVzdEhhbmRsZXJzID0gMFxuICAgICNkYnVzU2VydmljZTogQXBwREJ1c1xuICAgICNjc3NQcm92aWRlcnMgPSBuZXcgQXJyYXk8R3RrLkNzc1Byb3ZpZGVyPigpXG5cbiAgICBnZXQgI3NldHRpbmdzKCk6IEd0ay5TZXR0aW5ncyB7XG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0gR3RrLlNldHRpbmdzLmdldF9kZWZhdWx0KClcbiAgICAgICAgaWYgKCFzZXR0aW5ncykgdGhyb3cgRXJyb3IoXCJjb3VsZCBub3QgZ2V0IHNldHRpbmdzXCIpXG4gICAgICAgIHJldHVybiBzZXR0aW5nc1xuICAgIH1cblxuICAgIGdldCAjZGlzcGxheSgpOiBHZGsuRGlzcGxheSB7XG4gICAgICAgIGNvbnN0IGRpc3BsYXkgPSBHZGsuRGlzcGxheS5nZXRfZGVmYXVsdCgpXG4gICAgICAgIGlmICghZGlzcGxheSkgdGhyb3cgRXJyb3IoXCJjb3VsZCBub3QgZ2V0IGRpc3BsYXlcIilcbiAgICAgICAgcmV0dXJuIGRpc3BsYXlcbiAgICB9XG5cbiAgICBnZXQgaW5zdGFuY2VOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jaW5zdGFuY2VOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGFsbCBtb25pdG9ycyBmcm9tIHtAbGluayBHZGsuRGlzcGxheX0uXG4gICAgICovXG4gICAgZ2V0X21vbml0b3JzKCkge1xuICAgICAgICBjb25zdCBtb25zID0gdGhpcy4jZGlzcGxheS5nZXRfbW9uaXRvcnMoKSBhcyBHaW8uTGlzdE1vZGVsPEdkay5Nb25pdG9yPlxuICAgICAgICBjb25zdCBsaXN0ID0gbmV3IEFycmF5PEdkay5Nb25pdG9yPigpXG5cbiAgICAgICAgbGV0IG1vbml0b3I6IEdkay5Nb25pdG9yIHwgbnVsbCA9IG51bGxcbiAgICAgICAgbGV0IGkgPSAwXG5cbiAgICAgICAgd2hpbGUgKChtb25pdG9yID0gbW9ucy5nZXRfaXRlbShpKyspKSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKG1vbml0b3IpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGlzdFxuICAgIH1cblxuICAgIEBzaWduYWwoR3RrLldpbmRvdylcbiAgICBwcml2YXRlIHdpbmRvd1RvZ2dsZWQod2luZG93OiBHdGsuV2luZG93KSB7XG4gICAgICAgIHZvaWQgd2luZG93XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGFsbCBtb25pdG9ycyBmcm9tIHtAbGluayBHZGsuRGlzcGxheX0uXG4gICAgICovXG4gICAgQGdldHRlcihBcnJheSlcbiAgICBnZXQgbW9uaXRvcnMoKTogQXJyYXk8R2RrLk1vbml0b3I+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0X21vbml0b3JzKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaW5kb3dzIHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHBcbiAgICAgKiB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICBAZ2V0dGVyKEFycmF5KVxuICAgIGdldCB3aW5kb3dzKCk6IEFycmF5PEd0ay5XaW5kb3c+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0X3dpbmRvd3MoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGd0a1RoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtUaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a1RoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgZ3RrVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtUaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrSWNvblRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgaWNvblRoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtJY29uVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtJY29uVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBpY29uVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtJY29uVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0N1cnNvclRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgY3Vyc29yVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a0N1cnNvclRoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrQ3Vyc29yVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBjdXJzb3JUaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a0N1cnNvclRoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9IHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHBcbiAgICAgKiB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICBnZXRfd2luZG93KG5hbWU6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gdGhpcy53aW5kb3dzLmZpbmQoKHcpID0+IHcubmFtZSA9PT0gbmFtZSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb2dnbGUgdGhlIHZpc2liaWxpdHkgb2YgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfVxuICAgICAqIHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHAgdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgdG9nZ2xlX3dpbmRvdyhuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3Qgd2luID0gdGhpcy5nZXRfd2luZG93KG5hbWUpXG4gICAgICAgIGlmICghd2luKSB0aHJvdyBFcnJvcihgbm8gd2luZG93IHJlZ2lzdGVyZWQgd2l0aCBuYW1lIFwiJHtuYW1lfVwiYClcbiAgICAgICAgd2luLnZpc2libGUgPSAhd2luLnZpc2libGVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXNldCBwcmV2aW91c2x5IHNldCBjc3MgcHJvdmlkZXJzIHdpdGgge0BsaW5rIEFwcC5wcm90b3R5cGUuYXBwbHlfY3NzfS5cbiAgICAgKi9cbiAgICByZXNldF9jc3MoKSB7XG4gICAgICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgdGhpcy4jY3NzUHJvdmlkZXJzKSB7XG4gICAgICAgICAgICBHdGsuU3R5bGVDb250ZXh0LnJlbW92ZV9wcm92aWRlcl9mb3JfZGlzcGxheSh0aGlzLiNkaXNwbGF5LCBwcm92aWRlcilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCBhIG5ldyB7QGxpbmsgR3RrLkNzc1Byb3ZpZGVyfS5cbiAgICAgKiBAcGFyYW0gc3R5bGUgQ3NzIHN0cmluZyBvciBhIHBhdGggdG8gYSBjc3MgZmlsZS5cbiAgICAgKi9cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuXG4gICAgICAgIHByb3ZpZGVyLmNvbm5lY3QoXCJwYXJzaW5nLWVycm9yXCIsIChfLCBzZWN0aW9uLCBlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IHNlY3Rpb24uZ2V0X2ZpbGUoKT8uZ2V0X2Jhc2VuYW1lKCkgPz8gXCJcIlxuICAgICAgICAgICAgY29uc3QgbGluZSA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZXMgKyAxXG4gICAgICAgICAgICBjb25zdCBjaGFycyA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZV9jaGFycyArIDFcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYENTUyBFcnJvciAke25hbWV9OiR7bGluZX06JHtjaGFyc30gJHtlcnJvci5tZXNzYWdlfWApXG4gICAgICAgIH0pXG5cbiAgICAgICAgaWYgKHJlc2V0KSB0aGlzLnJlc2V0X2NzcygpXG5cbiAgICAgICAgaWYgKEdMaWIuZmlsZV90ZXN0KHN0eWxlLCBHTGliLkZpbGVUZXN0LkVYSVNUUykpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9wYXRoKHN0eWxlKVxuICAgICAgICB9IGVsc2UgaWYgKHN0eWxlLnN0YXJ0c1dpdGgoXCJyZXNvdXJjZTovL1wiKSkge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3Jlc291cmNlKHN0eWxlLnJlcGxhY2UoXCJyZXNvdXJjZTovL1wiLCBcIlwiKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoc3R5bGUpXG4gICAgICAgIH1cblxuICAgICAgICBHdGsuU3R5bGVDb250ZXh0LmFkZF9wcm92aWRlcl9mb3JfZGlzcGxheShcbiAgICAgICAgICAgIHRoaXMuI2Rpc3BsYXksXG4gICAgICAgICAgICBwcm92aWRlcixcbiAgICAgICAgICAgIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSLFxuICAgICAgICApXG5cbiAgICAgICAgdGhpcy4jY3NzUHJvdmlkZXJzLnB1c2gocHJvdmlkZXIpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuSWNvblRoZW1lLnByb3RvdHlwZS5hZGRfc2VhcmNoX3BhdGh9LlxuICAgICAqL1xuICAgIGFkZF9pY29ucyhwYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgR3RrLkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkodGhpcy4jZGlzcGxheSkuYWRkX3NlYXJjaF9wYXRoKHBhdGgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUXVpdCBhbmQgZXhpdCB0aGUgYXBwbGljYXRpb24uXG4gICAgICovXG4gICAgcXVpdChjb2RlID0gMCkge1xuICAgICAgICB0aGlzLiNkYnVzU2VydmljZS5zdG9wKClcbiAgICAgICAgc3VwZXIucXVpdCgpXG4gICAgICAgIGV4aXQoY29kZSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoeyBmbGFnczogR2lvLkFwcGxpY2F0aW9uRmxhZ3MuSEFORExFU19DT01NQU5EX0xJTkUgfSlcblxuICAgICAgICB0aGlzLiNkYnVzU2VydmljZSA9IG5ldyBBcHBEQnVzKHtcbiAgICAgICAgICAgIHRvZ2dsZVdpbmRvdzogdGhpcy50b2dnbGVfd2luZG93LmJpbmQodGhpcyksXG4gICAgICAgICAgICBxdWl0OiB0aGlzLnF1aXQuYmluZCh0aGlzKSxcbiAgICAgICAgICAgIHJlcXVlc3Q6IChhcmd2KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gdGhpcy5yZXF1ZXN0KGFyZ3YsIHJlc29sdmUpKSxcbiAgICAgICAgICAgIGluc2VjdG9yOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgR3RrLldpbmRvdy5zZXRfaW50ZXJhY3RpdmVfZGVidWdnaW5nKHRydWUpXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuI2Rpc3BsYXkuZ2V0X21vbml0b3JzKCkuY29ubmVjdChcIml0ZW1zLWNoYW5nZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJtb25pdG9yc1wiKVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuY29ubmVjdChcIndpbmRvdy1hZGRlZFwiLCAoXywgd2luZG93KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpZDEgPSB3aW5kb3cuY29ubmVjdChcIm5vdGlmeTo6dmlzaWJsZVwiLCAoKSA9PiB0aGlzLndpbmRvd1RvZ2dsZWQod2luZG93KSlcbiAgICAgICAgICAgIGNvbnN0IGlkMiA9IHRoaXMuY29ubmVjdChcIndpbmRvdy1yZW1vdmVkXCIsIChfLCByZW1vdmVkKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlbW92ZWQgPT0gd2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5kaXNjb25uZWN0KGlkMSlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNjb25uZWN0KGlkMilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmNvbm5lY3QoXCJub3RpZnlcIiwgKF8sIHsgbmFtZSB9KSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJndGstdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLWljb24tdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImljb24tdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLWN1cnNvci10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiY3Vyc29yLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBAc2lnbmFsKEFycmF5LCBGdW5jdGlvbilcbiAgICBwcml2YXRlIHJlcXVlc3QoYXJnczogc3RyaW5nW10sIHJlc3BvbnNlOiAocmVzcG9uc2U6IHN0cmluZykgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy4jcmVxdWVzdEhhbmRsZXJzID09PSAwKSB7XG4gICAgICAgICAgICByZXNwb25zZShgaW5zdGFuY2UgXCIke3RoaXMuaW5zdGFuY2VOYW1lfVwiIGhhcyBubyByZXF1ZXN0IGhhbmRsZXIgaW1wbGVtZW50ZWRgKVxuICAgICAgICB9XG4gICAgICAgIHZvaWQgYXJnc1xuICAgIH1cblxuICAgIHZmdW5jX2NvbW1hbmRfbGluZShjbWQ6IEdpby5BcHBsaWNhdGlvbkNvbW1hbmRMaW5lKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKGNtZC5pc1JlbW90ZSkge1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0KGNtZC5nZXRfYXJndW1lbnRzKCksIChzdHIpID0+IHtcbiAgICAgICAgICAgICAgICBjbWQucHJpbnRfbGl0ZXJhbChzdHIgKyBcIlxcblwiKVxuICAgICAgICAgICAgICAgIGNtZC5kb25lKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhvbGQoKVxuICAgICAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2Uuc2VydmUoe1xuICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuYXBwbGljYXRpb25JZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0KFwic2h1dGRvd25cIiwgZGlzcG9zZSlcbiAgICAgICAgICAgICAgICB0aGlzLiNtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIDBcbiAgICB9XG5cbiAgICBzdGFydChjb25maWc6IFN0YXJ0Q29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHsgbWFpbiwgcmVxdWVzdEhhbmRsZXIsIGluc3RhbmNlTmFtZSwgY3NzLCBpY29ucywgLi4uY2ZnIH0gPSBjb25maWdcblxuICAgICAgICB0aGlzLiNtYWluID0gbWFpblxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZylcblxuICAgICAgICBpZiAocmVxdWVzdEhhbmRsZXIpIHtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdChcInJlcXVlc3RcIiwgKF8sIGFyZ3MsIHJlc3BvbnNlKSA9PiByZXF1ZXN0SGFuZGxlcihhcmdzLCByZXNwb25zZSkpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5zdGFuY2VOYW1lKSB0aGlzLiNpbnN0YW5jZU5hbWUgPSBpbnN0YW5jZU5hbWVcbiAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcbiAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgIHRoaXMuYXBwbGljYXRpb25JZCA9IFwiaW8uQXN0YWwuXCIgKyB0aGlzLmluc3RhbmNlTmFtZVxuICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKHRoaXMuaW5zdGFuY2VOYW1lKVxuICAgICAgICB0aGlzLnJ1bkFzeW5jKHByb2dyYW1BcmdzKVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIEFwcFNpZ25hbHM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEFwcFNpZ25hbHNbU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIGlmIChzaWduYWwgPT09IFwicmVxdWVzdFwiKSB0aGlzLiNyZXF1ZXN0SGFuZGxlcnMgKz0gMVxuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cbn1cblxuY29uc3QgYXBwID0gbmV3IEFwcCgpXG5leHBvcnQgZGVmYXVsdCBhcHBcbiIsICIvKipcbiAqIEEge0BsaW5rIFNlcnZpY2V9IGN1cnJlbnRseSBvbmx5IGFsbG93cyBpbnRlcmZhY2luZyB3aXRoIGEgc2luZ2xlIGludGVyZmFjZSBvZiBhIHJlbW90ZSBvYmplY3QuXG4gKiBJbiB0aGUgZnV0dXJlIEkgd2FudCB0byBjb21lIHVwIHdpdGggYW4gQVBJIHRvIGJlIGFibGUgdG8gY3JlYXRlIFNlcnZpY2Ugb2JqZWN0cyBmb3IgbXVsdGlwbGVcbiAqIGludGVyZmFjZXMgb2YgYW4gb2JqZWN0IGF0IHRoZSBzYW1lIHRpbWUuIEV4YW1wbGUgdXNhZ2Ugd291bGQgYmUgZm9yIGV4YW1wbGUgY29tYmluaW5nXG4gKiBcIm9yZy5tcHJpcy5NZWRpYVBsYXllcjJcIiBhbmQgXCJvcmcubXByaXMuTWVkaWFQbGF5ZXIyLlBsYXllclwiIGludG8gYSBzaW5nbGUgb2JqZWN0LlxuICovXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZGVmaW5lUHJvcGVydHlHZXR0ZXIsIGtlYmFiaWZ5LCB4bWwgfSBmcm9tIFwiLi91dGlsLmpzXCJcbmltcG9ydCB7XG4gICAgcmVnaXN0ZXIsXG4gICAgcHJvcGVydHkgYXMgZ3Byb3BlcnR5LFxuICAgIHNpZ25hbCBhcyBnc2lnbmFsLFxuICAgIGdldHRlciBhcyBnZ2V0dGVyLFxuICAgIHNldHRlciBhcyBnc2V0dGVyLFxufSBmcm9tIFwiLi9nb2JqZWN0LmpzXCJcblxuY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTBfMDAwXG5cbmV4cG9ydCBjb25zdCBWYXJpYW50ID0gR0xpYi5WYXJpYW50XG5leHBvcnQgdHlwZSBWYXJpYW50PFQgZXh0ZW5kcyBzdHJpbmc+ID0gR0xpYi5WYXJpYW50PFQ+XG5cbmNvbnN0IGluZm8gPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbmZvXCIpXG5jb25zdCBpbnRlcm5hbHMgPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbnRlcm5hbHNcIilcbmNvbnN0IHJlbW90ZU1ldGhvZCA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZFwiKVxuY29uc3QgcmVtb3RlTWV0aG9kQXN5bmMgPSBTeW1ib2woXCJwcm94eSByZW1vdGVNZXRob2RBc3luY1wiKVxuY29uc3QgcmVtb3RlUHJvcGVydHlTZXQgPSBTeW1ib2woXCJwcm94eSByZW1vdGVQcm9wZXJ0eVNldFwiKVxuXG50eXBlIERlZXBJbmZlcjxTIGV4dGVuZHMgc3RyaW5nPiA9IFJldHVyblR5cGU8R0xpYi5WYXJpYW50PFM+W1wiZGVlcFVucGFja1wiXT5cbnR5cGUgQ3R4ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cblxuLyoqXG4gKiBCYXNlIHR5cGUgZm9yIERCdXMgc2VydmljZXMgYW5kIHByb3hpZXMuIEludGVyZmFjZSBuYW1lIGlzIHNldCB3aXRoXG4gKiB0aGUge0BsaW5rIGlmYWNlfSBkZWNvcmF0b3Igd2hpY2ggYWxzbyByZWdpc3RlciBpdCBhcyBhIEdPYmplY3QgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlcnZpY2UgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtpbmZvXT86IEdpby5EQnVzSW50ZXJmYWNlSW5mb1xuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgfVxuXG4gICAgW2ludGVybmFsc106IHtcbiAgICAgICAgZGJ1c09iamVjdD86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3RcbiAgICAgICAgcHJveHk/OiBHaW8uREJ1c1Byb3h5XG4gICAgICAgIHByaXY6IFJlY29yZDxzdHJpbmcgfCBzeW1ib2wsIHVua25vd24+XG4gICAgICAgIG9uU3RvcDogU2V0PCgpID0+IHZvaWQ+XG4gICAgfSA9IHtcbiAgICAgICAgcHJpdjoge30sXG4gICAgICAgIG9uU3RvcDogbmV3IFNldDwoKSA9PiB2b2lkPigpLFxuICAgIH1cblxuICAgICNpbmZvOiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbnN0cnVjdG9yIGFzIHVua25vd24gYXMgdHlwZW9mIFNlcnZpY2VcbiAgICAgICAgaWYgKCFzZXJ2aWNlW2luZm9dKSB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW50ZXJmYWNlIGluZm9cIilcbiAgICAgICAgdGhpcy4jaW5mbyA9IHNlcnZpY2VbaW5mb11cbiAgICB9XG5cbiAgICBub3RpZnkocHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4gfCAoc3RyaW5nICYge30pKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKHByb3AgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHtcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfcHJvcGVydHlfY2hhbmdlZChcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eU5hbWUsXG4gICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdGhpc1twcm9wZXJ0eU5hbWUgYXMga2V5b2YgdGhpc10pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIubm90aWZ5KHByb3AgPyBrZWJhYmlmeShwcm9wZXJ0eU5hbWUpIDogcHJvcGVydHlOYW1lKVxuICAgIH1cblxuICAgIGVtaXQobmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IHVua25vd25bXSk6IHZvaWQge1xuICAgICAgICBjb25zdCBzaWduYWwgPSB0aGlzLiNpbmZvLmxvb2t1cF9zaWduYWwobmFtZSlcblxuICAgICAgICBpZiAoc2lnbmFsICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7c2lnbmFsLmFyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9zaWduYWwobmFtZSwgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHBhcmFtcykpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VwZXIuZW1pdChzaWduYWwgPyBrZWJhYmlmeShuYW1lKSA6IG5hbWUsIC4uLnBhcmFtcylcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlHZXQoXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCwgcHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4pIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIGV4cG9ydGVkIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1twcm9wZXJ0eU5hbWVdXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlTZXQoXG4gICAgICAgIF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsXG4gICAgICAgIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICB2YWx1ZTogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHZhbHVlLmRlZXBVbnBhY2soKVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmICghcHJvcCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gcHJvcGVydHk6IFwiJHtwcm9wZXJ0eU5hbWV9XCJgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXNbcHJvcGVydHlOYW1lXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IHZhbHVlLmRlZXBVbnBhY2s8YW55PigpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuRXJyb3IoZXJyb3I6IHVua25vd24sIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBHTGliLkVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZ2Vycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcbiAgICAgICAgICAgICAgICBlcnJvci5uYW1lLmluY2x1ZGVzKFwiLlwiKSA/IGVycm9yLm5hbWUgOiBgZ2pzLkpTRXJyb3IuJHtlcnJvci5uYW1lfWAsXG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKFwiZ2pzLkRCdXNTZXJ2aWNlLlVua25vd25FcnJvclwiLCBgJHtlcnJvcn1gKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNyZXR1cm5WYWx1ZSh2YWx1ZTogdW5rbm93biwgbWV0aG9kTmFtZTogc3RyaW5nLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KFwiKClcIiwgW10pKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKT8ub3V0X2FyZ3MgPz8gW11cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke2FyZ3MubWFwKChhcmcpID0+IGFyZy5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgdGhyb3cgRXJyb3IoXCJ2YWx1ZSBoYXMgdG8gYmUgYSB0dXBsZVwiKVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgdmFsdWUpKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVNZXRob2RDYWxsKFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBtZXRob2ROYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4sXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICAgICAgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uLFxuICAgICk6IHZvaWQge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAodGhpc1ttZXRob2ROYW1lXSBhcyAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duKShcbiAgICAgICAgICAgICAgICAuLi5wYXJhbWV0ZXJzLmRlZXBVbnBhY2s8QXJyYXk8dW5rbm93bj4+KCksXG4gICAgICAgICAgICApXG5cbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEdMaWIuVmFyaWFudCkge1xuICAgICAgICAgICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAudGhlbigodmFsdWUpID0+IHRoaXMuI3JldHVyblZhbHVlKHZhbHVlLCBtZXRob2ROYW1lLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgYXN5bmMgc2VydmUoe1xuICAgICAgICBidXNUeXBlID0gR2lvLkJ1c1R5cGUuU0VTU0lPTixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uQnVzTmFtZU93bmVyRmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1c1R5cGU/OiBHaW8uQnVzVHlwZVxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uQnVzTmFtZU93bmVyRmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBpbXBsID0gbmV3IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QoXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgY29uc3RydWN0b3IgdHlwZVxuICAgICAgICAgICAgeyBnX2ludGVyZmFjZV9pbmZvOiB0aGlzLiNpbmZvIH0sXG4gICAgICAgIClcblxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtbWV0aG9kLWNhbGxcIiwgdGhpcy4jaGFuZGxlTWV0aG9kQ2FsbC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktZ2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5R2V0LmJpbmQodGhpcykpXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1wcm9wZXJ0eS1zZXRcIiwgdGhpcy4jaGFuZGxlUHJvcGVydHlTZXQuYmluZCh0aGlzKSlcblxuICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX2J1aWxkKClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBzZXJ2ZSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBjb25zdCBjbGVhciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGJ1c0lkID0gR2lvLmJ1c19vd25fbmFtZShcbiAgICAgICAgICAgICAgICBidXNUeXBlLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgZmxhZ3MsXG4gICAgICAgICAgICAgICAgKGNvbm46IEdpby5EQnVzQ29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC5leHBvcnQoY29ubiwgb2JqZWN0UGF0aClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0ID0gaW1wbFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdpby5idXNfdW5vd25fbmFtZShidXNJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbXBsLnVuZXhwb3J0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX3JlbGVhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgY2hhbmdlZDogR0xpYi5WYXJpYW50PFwiYXtzdn1cIj4sXG4gICAgICAgIGludmFsaWRhdGVkOiBzdHJpbmdbXSxcbiAgICApIHtcbiAgICAgICAgY29uc3Qgc2V0ID0gbmV3IFNldChbLi4uT2JqZWN0LmtleXMoY2hhbmdlZC5kZWVwVW5wYWNrKCkpLCAuLi5pbnZhbGlkYXRlZF0pXG4gICAgICAgIGZvciAoY29uc3QgcHJvcCBvZiBzZXQudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KHByb3AgYXMgRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlU2lnbmFsKFxuICAgICAgICBfOiBHaW8uREJ1c1Byb3h5LFxuICAgICAgICBfc2VuZGVyOiBzdHJpbmcgfCBudWxsLFxuICAgICAgICBzaWduYWw6IHN0cmluZyxcbiAgICAgICAgcGFyYW1ldGVyczogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICB0aGlzLmVtaXQoa2ViYWJpZnkoc2lnbmFsKSwgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI3JlbW90ZU1ldGhvZFBhcmFtcyhcbiAgICAgICAgbWV0aG9kTmFtZTogc3RyaW5nLFxuICAgICAgICBhcmdzOiB1bmtub3duW10sXG4gICAgKTogUGFyYW1ldGVyczxHaW8uREJ1c1Byb3h5W1wiY2FsbF9zeW5jXCJdPiB7XG4gICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBpZiAoIXByb3h5KSB0aHJvdyBFcnJvcihcImludmFsaWQgcmVtb3RlTWV0aG9kIGludm9jYXRpb246IG5vdCBhIHByb3h5XCIpXG5cbiAgICAgICAgY29uc3QgbWV0aG9kID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpXG4gICAgICAgIGlmICghbWV0aG9kKSB0aHJvdyBFcnJvcihcIm1ldGhvZCBub3QgZm91bmRcIilcblxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7bWV0aG9kLmluX2FyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtZXRob2ROYW1lLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIGFyZ3MpLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIERFRkFVTFRfVElNRU9VVCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgIF1cbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVNZXRob2RdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogR0xpYi5WYXJpYW50IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgIHJldHVybiB0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfc3luYyguLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kQXN5bmNdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogUHJvbWlzZTxHTGliLlZhcmlhbnQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsKC4uLnBhcmFtcywgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWU6IHN0cmluZywgdmFsdWU6IHVua25vd24pIHtcbiAgICAgICAgY29uc3QgcHJveHkgPSB0aGlzW2ludGVybmFsc10ucHJveHkhXG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShuYW1lKSFcblxuICAgICAgICBjb25zdCB2YXJpYW50ID0gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIHByb3h5LnNldF9jYWNoZWRfcHJvcGVydHkobmFtZSwgdmFyaWFudClcblxuICAgICAgICBwcm94eS5jYWxsKFxuICAgICAgICAgICAgXCJvcmcuZnJlZWRlc2t0b3AuREJ1cy5Qcm9wZXJ0aWVzLlNldFwiLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcIihzc3YpXCIsIFtwcm94eS5nSW50ZXJmYWNlTmFtZSwgbmFtZSwgdmFyaWFudF0pLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIC0xLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBwcm94eS5jYWxsX2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgYXN5bmMgcHJveHkoe1xuICAgICAgICBidXMgPSBHaW8uREJ1cy5zZXNzaW9uLFxuICAgICAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICBvYmplY3RQYXRoID0gXCIvXCIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoXCIuXCIpLmpvaW4oXCIvXCIpLFxuICAgICAgICBmbGFncyA9IEdpby5EQnVzUHJveHlGbGFncy5OT05FLFxuICAgICAgICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxuICAgIH06IHtcbiAgICAgICAgYnVzPzogR2lvLkRCdXNDb25uZWN0aW9uXG4gICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgb2JqZWN0UGF0aD86IHN0cmluZ1xuICAgICAgICBmbGFncz86IEdpby5EQnVzUHJveHlGbGFnc1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyXG4gICAgfSA9IHt9KTogUHJvbWlzZTx0aGlzPiB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gbmV3IEdpby5EQnVzUHJveHkoe1xuICAgICAgICAgICAgZ0Nvbm5lY3Rpb246IGJ1cyxcbiAgICAgICAgICAgIGdJbnRlcmZhY2VOYW1lOiB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgICAgICBnSW50ZXJmYWNlSW5mbzogdGhpcy4jaW5mbyxcbiAgICAgICAgICAgIGdOYW1lOiBuYW1lLFxuICAgICAgICAgICAgZ0ZsYWdzOiBmbGFncyxcbiAgICAgICAgICAgIGdPYmplY3RQYXRoOiBvYmplY3RQYXRoLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYW5jYWxsYWJsZSA9IG5ldyBHaW8uQ2FuY2VsbGFibGUoKVxuXG4gICAgICAgICAgICBsZXQgc291cmNlID1cbiAgICAgICAgICAgICAgICB0aW1lb3V0ID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoYHByb3h5IHRpbWVkIG91dGApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNhbGxhYmxlLmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgdGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgIHByb3h5LmluaXRfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBjYW5jYWxsYWJsZSwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm94eS5pbml0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSA9IHByb3h5XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRzID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJveHkuY29ubmVjdChcImctc2lnbmFsXCIsIHRoaXMuI2hhbmRsZVNpZ25hbC5iaW5kKHRoaXMpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJnLXByb3BlcnRpZXMtY2hhbmdlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdXG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmZvckVhY2goKGlkKSA9PiBwcm94eS5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10ucHJveHlcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgY29uc3QgeyBvblN0b3AgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBmb3IgKGNvbnN0IGNiIG9mIG9uU3RvcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgb25TdG9wLmRlbGV0ZShjYilcbiAgICAgICAgICAgIGNiKClcbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBJbnRlcmZhY2VNZXRhID0ge1xuICAgIGRidXNNZXRob2RzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgfCBcIm91dFwiXG4gICAgICAgIH0+XG4gICAgPlxuICAgIGRidXNTaWduYWxzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzUHJvcGVydGllcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgcmVhZD86IHRydWVcbiAgICAgICAgICAgIHdyaXRlPzogdHJ1ZVxuICAgICAgICB9XG4gICAgPlxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHtAbGluayBTZXJ2aWNlfSBhcyBhIGRidXMgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIEludGVyZmFjZSBuYW1lIG9mIHRoZSBvYmplY3QuIEZvciBleGFtcGxlIFwib3JnLmdub21lLlNoZWxsLlNlYXJjaFByb3ZpZGVyMlwiXG4gKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25hbCBwcm9wZXJ0aWVzIHRvIHBhc3MgdG8ge0BsaW5rIHJlZ2lzdGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZhY2UobmFtZTogc3RyaW5nLCBvcHRpb25zPzogUGFyYW1ldGVyczx0eXBlb2YgcmVnaXN0ZXI+WzBdKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IFNlcnZpY2UgfSwgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YVxuICAgICAgICBpZiAoIW1ldGEpIHRocm93IEVycm9yKGAke2Nscy5uYW1lfSBpcyBub3QgYW4gaW50ZXJmYWNlYClcblxuICAgICAgICBjb25zdCB7IGRidXNNZXRob2RzID0ge30sIGRidXNTaWduYWxzID0ge30sIGRidXNQcm9wZXJ0aWVzID0ge30gfSA9IG1ldGEgYXMgSW50ZXJmYWNlTWV0YVxuXG4gICAgICAgIGNvbnN0IGluZm9YbWwgPSB4bWwoe1xuICAgICAgICAgICAgbmFtZTogXCJub2RlXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJpbnRlcmZhY2VcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzTWV0aG9kcykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtZXRob2RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNTaWduYWxzKS5tYXAoKFtuYW1lLCBhcmdzXSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ25hbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiBcImFyZ1wiLCBhdHRyaWJ1dGVzOiBhcmcgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LnZhbHVlcyhkYnVzUHJvcGVydGllcykubWFwKCh7IG5hbWUsIHR5cGUsIHJlYWQsIHdyaXRlIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwcm9wZXJ0eVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKG5hbWUgJiYgeyBuYW1lIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3M6IChyZWFkID8gXCJyZWFkXCIgOiBcIlwiKSArICh3cml0ZSA/IFwid3JpdGVcIiA6IFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbihjbHMsIHsgW2luZm9dOiBHaW8uREJ1c0ludGVyZmFjZUluZm8ubmV3X2Zvcl94bWwoaW5mb1htbCkgfSlcbiAgICAgICAgcmVnaXN0ZXIob3B0aW9ucykoY2xzLCBjdHgpXG4gICAgfVxufVxuXG50eXBlIERCdXNUeXBlID0gc3RyaW5nIHwgeyB0eXBlOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9XG5cbnR5cGUgSW5mZXJWYXJpYW50VHlwZXM8VCBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVF06IFRbS10gZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgPyBEZWVwSW5mZXI8VFtLXT5cbiAgICAgICAgOiBUW0tdIGV4dGVuZHMgeyB0eXBlOiBpbmZlciBTIH1cbiAgICAgICAgICA/IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgICAgPyBEZWVwSW5mZXI8Uz5cbiAgICAgICAgICAgICAgOiBuZXZlclxuICAgICAgICAgIDogdW5rbm93blxufVxuXG5mdW5jdGlvbiBpbnN0YWxsTWV0aG9kPEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGFyZ3M6IEFyZ3MgfCBbQXJncywgQXJncz9dLFxuICAgIG1ldGhvZDogKC4uLmFyZ3M6IGFueVtdKSA9PiB1bmtub3duLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IG1ldGhvZHMgPSAobWV0YS5kYnVzTWV0aG9kcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBtZXRob2RzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgW2luQXJncywgb3V0QXJncyA9IFtdXSA9IChBcnJheS5pc0FycmF5KGFyZ3NbMF0pID8gYXJncyA6IFthcmdzXSkgYXMgW0FyZ3MsIEFyZ3NdXG5cbiAgICBtZXRob2RzW25hbWVdID0gW1xuICAgICAgICAuLi5pbkFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwiaW5cIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICAgICAgLi4ub3V0QXJncy5tYXAoKGFyZykgPT4gKHtcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJvdXRcIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICBdXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsUHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4oXG4gICAgdHlwZTogVCxcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKSB7XG4gICAgY29uc3Qga2luZCA9IGN0eC5raW5kXG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHByb3BlcnRpZXMgPSAobWV0YS5kYnVzUHJvcGVydGllcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBwcm9wZXJ0aWVzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgcmVhZCA9IGtpbmQgPT09IFwiZmllbGRcIiB8fCBraW5kID09PSBcImdldHRlclwiXG4gICAgY29uc3Qgd3JpdGUgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJzZXR0ZXJcIlxuXG4gICAgaWYgKG5hbWUgaW4gcHJvcGVydGllcykge1xuICAgICAgICBpZiAod3JpdGUpIHByb3BlcnRpZXNbbmFtZV0ud3JpdGUgPSB0cnVlXG4gICAgICAgIGlmIChyZWFkKSBwcm9wZXJ0aWVzW25hbWVdLnJlYWQgPSB0cnVlXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllc1tuYW1lXSA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgLi4uKHJlYWQgJiYgeyByZWFkIH0pLFxuICAgICAgICAgICAgLi4uKHdyaXRlICYmIHsgd3JpdGUgfSksXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsU2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZT4sXG4pIHtcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLmRidXNTaWduYWxzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcInN5bWJvbHMgYXJlIG5vdCB2YWxpZCBzaWduYWxzXCIpXG4gICAgfVxuXG4gICAgc2lnbmFsc1tuYW1lXSA9IHBhcmFtcy5tYXAoKGFyZykgPT4gKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSlcblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlOiBEQnVzVHlwZSk6IEdPYmplY3QuR1R5cGU8YW55PiB7XG4gICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiKSByZXR1cm4gaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUudHlwZSlcblxuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoXCJhXCIpIHx8IHR5cGUuc3RhcnRzV2l0aChcIihcIikpIHtcbiAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9KU09CSkVDVFxuICAgIH1cblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwidlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9WQVJJQU5UXG4gICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0JPT0xFQU5cbiAgICAgICAgY2FzZSBcInlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInFcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiaVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInVcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwieFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlQ2NFxuICAgICAgICBjYXNlIFwidFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UNjRcbiAgICAgICAgY2FzZSBcImhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0RPVUJMRVxuICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICBjYXNlIFwiZ1wiOlxuICAgICAgICBjYXNlIFwib1wiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9TVFJJTkdcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBpbmZlciBHVHlwZSBmcm9tIHZhcmlhbnQgXCIke3R5cGV9XCJgKVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gdm9pZFxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiB2b2lkLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LCBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXVxuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAoXG4gICAgICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAgICAgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPlxuICAgICAgICApID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogdHlwZW9mIG1ldGhvZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsTWV0aG9kKGFyZ3MsIG1ldGhvZCwgY3R4KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1tyZW1vdGVNZXRob2RdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPihcbiAgICBpbkFyZ3M6IEluQXJncyxcbiAgICBvdXRBcmdzOiBPdXRBcmdzLFxuKTogKFxuICAgIG1ldGhvZDogKFxuICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gdm9pZFxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPHZvaWQ+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc10pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6IChcbiAgICAgICAgICAgIHRoaXM6IFNlcnZpY2UsXG4gICAgICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgICAgICkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQ+LFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiB0eXBlb2YgbWV0aG9kIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpXG5cbiAgICAgICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uICguLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCB0aGlzW3JlbW90ZU1ldGhvZEFzeW5jXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLXdyaXRlIHByb3BlcnR5LiBXaGVuIGEgbmV3IHZhbHVlIGlzIGFzc2lnbmVkIHRoZSBub3RpZnkgc2lnbmFsXG4gKiBpcyBhdXRvbWF0aWNhbGx5IGVtaXR0ZWQgb24gdGhlIGxvY2FsIGFuZCBleHBvcnRlZCBvYmplY3QuXG4gKlxuICogTm90ZSB0aGF0IG5ldyB2YWx1ZXMgYXJlIGNoZWNrZWQgYnkgcmVmZXJlbmNlIHNvIGFzc2lnbmluZyB0aGUgc2FtZSBvYmplY3Qgd2lsbFxuICogbm90IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIGluaXQ6IERlZXBJbmZlcjxUPikgPT4gRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgdm9pZCBncHJvcGVydHkoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgIF8sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICAgICAgeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICAgICApXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldCh2YWx1ZTogRGVlcEluZmVyPFQ+KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcml2W25hbWVdICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdltuYW1lXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAocHJpdltuYW1lXSBhcyBEZWVwSW5mZXI8VD4pXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPFNlcnZpY2U+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5pdCkge1xuICAgICAgICAgICAgY29uc3QgcHJpdiA9IHRoaXNbaW50ZXJuYWxzXS5wcml2XG4gICAgICAgICAgICBwcml2W25hbWVdID0gaW5pdFxuICAgICAgICAgICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBzdG9yZSB0aGUgdmFsdWUgb24gdGhlIG9iamVjdFxuICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCBhcyB1bmtub3duIGFzIERlZXBJbmZlcjxUPlxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBzZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIGdldHRlcjogKHRoaXM6IFNlcnZpY2UpID0+IERlZXBJbmZlcjxUPixcbiAgICAgICAgY3R4OiBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSkgPT4gRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5R2V0dGVyKHRoaXMsIG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHZvaWQgZ2dldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgID8gcHJveHkuZ2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lKSEuZGVlcFVucGFjazxEZWVwSW5mZXI8VD4+KClcbiAgICAgICAgICAgICAgICA6IGdldHRlci5jYWxsKHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgd3JpdGUtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBnZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIHNldHRlcjogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdzZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICBpZiAocHJveHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0dGVyLmNhbGwodGhpcywgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgc2lnbmFsIHdoaWNoIHdoZW4gaW52b2tlZCB3aWxsIGVtaXQgdGhlIHNpZ25hbFxuICogb24gdGhlIGxvY2FsIG9iamVjdCBhbmQgdGhlIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiAqKk5vdGUqKjogaXRzIG5vdCBwb3NzaWJsZSB0byBlbWl0IHNpZ25hbHMgb24gcmVtb3RlIG9iamVjdHMgdGhyb3VnaCBwcm94aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oLi4ucGFyYW1zOiBQYXJhbXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5wYXJhbXM6IEluZmVyVmFyaWFudFR5cGVzPFBhcmFtcz4pID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6IHR5cGVvZiBtZXRob2Qge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFNpZ25hbChwYXJhbXMsIGN0eClcblxuICAgICAgICB2b2lkIGdzaWduYWwoLi4ucGFyYW1zLm1hcChpbmZlckdUeXBlRnJvbVZhcmlhbnQpKShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLnBhcmFtczogSW5mZXJWYXJpYW50VHlwZXM8UGFyYW1zPikge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgY2Fubm90IGVtaXQgc2lnbmFsIFwiJHtuYW1lfVwiIG9uIHJlbW90ZSBvYmplY3RgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QgfHwgIXRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIG1ldGhvZC5hcHBseSh0aGlzLCBwYXJhbXMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQobmFtZSwgLi4ucGFyYW1zKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB7IFNlcnZpY2UsIGlmYWNlLCBtZXRob2RBc3luYyB9IGZyb20gXCJnbmltL2RidXNcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcERCdXNJbXBsIHtcbiAgICBpbnNlY3RvcigpOiB2b2lkXG4gICAgdG9nZ2xlV2luZG93KG5hbWU6IHN0cmluZyk6IHZvaWRcbiAgICBxdWl0KCk6IHZvaWRcbiAgICByZXF1ZXN0KGFyZ3Y6IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+XG59XG5cbkBpZmFjZShcImlvLkFzdGFsLkFwcGxpY2F0aW9uXCIpXG5leHBvcnQgY2xhc3MgQXBwREJ1cyBleHRlbmRzIFNlcnZpY2Uge1xuICAgIHByaXZhdGUgaW1wbDogQXBwREJ1c0ltcGxcblxuICAgIEBtZXRob2RBc3luYygpXG4gICAgYXN5bmMgSW5zcGVjdG9yKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5pbnNlY3RvcigpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYyhcInNcIilcbiAgICBhc3luYyBUb2dnbGVXaW5kb3cobmFtZTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnRvZ2dsZVdpbmRvdyhuYW1lKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoKVxuICAgIGFzeW5jIFF1aXQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnF1aXQoKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoW1wiYXNcIl0sIFtcInNcIl0pXG4gICAgYXN5bmMgUmVxdWVzdChhcmd2OiBzdHJpbmdbXSk6IFByb21pc2U8W3N0cmluZ10+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5yZXF1ZXN0KGFyZ3YpLnRoZW4oKHJlcykgPT4gW3Jlc10pXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoaW1wbDogQXBwREJ1c0ltcGwpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLmltcGwgPSBpbXBsXG4gICAgfVxuXG4gICAgc3RhdGljIHByb3h5KGluc3RhbmNlTmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGFwcCA9IG5ldyBBcHBEQnVzKHtcbiAgICAgICAgICAgIGluc2VjdG9yKCkge30sXG4gICAgICAgICAgICB0b2dnbGVXaW5kb3coKSB7fSxcbiAgICAgICAgICAgIHF1aXQoKSB7fSxcbiAgICAgICAgICAgIHJlcXVlc3Q6ICgpID0+IFByb21pc2UucmVqZWN0KCksXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGFwcC5wcm94eSh7XG4gICAgICAgICAgICBuYW1lOiBcImlvLkFzdGFsLlwiICsgaW5zdGFuY2VOYW1lLFxuICAgICAgICB9KVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSBhcHBlbmRlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFthcHBlbmRDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCB0eXBlOiBzdHJpbmcgfCBudWxsKSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYXBwZW5kQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIGNoaWxkIG1ldGhvZFwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgcmVtb3ZlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFtyZW1vdmVDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIHJlbW92ZSBtZXRob2RcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBgJHtpbmZlciBFfTo6JHtpbmZlciBEfWBcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PGAke0V9OiR7RH1gPn1gXG4gICAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLy8gb25Ob3RpZnlQcm9wTmFtZSAtPiBub3RpZnk6OnByb3AtbmFtZVxuLy8gb25QYXNjYWxOYW1lOmRldGFpbE5hbWUgLT4gcGFzY2FsLW5hbWU6OmRldGFpbC1uYW1lXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsTmFtZShrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgW3NpZywgZGV0YWlsXSA9IGtlYmFiaWZ5KGtleS5zbGljZSgyKSkuc3BsaXQoXCI6XCIpXG5cbiAgICBpZiAoc2lnLnN0YXJ0c1dpdGgoXCJub3RpZnktXCIpKSB7XG4gICAgICAgIHJldHVybiBgbm90aWZ5Ojoke3NpZy5zbGljZSg3KX1gXG4gICAgfVxuXG4gICAgcmV0dXJuIGRldGFpbCA/IGAke3NpZ306OiR7ZGV0YWlsfWAgOiBzaWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHJlbW92ZUNoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W3JlbW92ZUNoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFtyZW1vdmVDaGlsZF0oY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVudi5yZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoYXBwZW5kQ2hpbGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbYXBwZW5kQ2hpbGRdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcGFyZW50W2FwcGVuZENoaWxkXShjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXBwZW5kSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoXCJhcHBlbmRcIiwgKF8sIGNoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IGFkZCAke2NofSB0byAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IHJlbW92ZUhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwicmVtb3ZlXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KGFwcGVuZEhhbmRsZXIpXG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KHJlbW92ZUhhbmRsZXIpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkKSB7XG4gICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgfVxuICAgICAgICBlbnYuYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZClcbiAgICB9XG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcblxuICAgIGNvbnN0IGRlZmVyUHJvcHMgPSBlbnYuaW5pdFByb3BzKGN0b3IsIHByb3BzKSA/PyBbXVxuICAgIGNvbnN0IGRlZmVycmVkUHJvcHM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge31cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWZlclByb3BzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvcHNba2V5XSA9IHByb3BzW2tleV1cbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKEVycm9yKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKSlcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmQob2JqZWN0LCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIHNpZ25hbHNcbiAgICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxOYW1lKHNpZyksIGhhbmRsZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9KVxuXG4gICAgLy8gZGVmZXJyZWQgcHJvcHNcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkZWZlcnJlZFByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBba2V5XTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbi8vIFRPRE86IG1ha2UgdXNlIG9mIGpzeHNcbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuaW50ZXJmYWNlIEZyYWdtZW50U2lnbmFsczxUPiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgIGFwcGVuZDogKGNoaWxkOiBUKSA9PiB2b2lkXG4gICAgcmVtb3ZlOiAoY2hpbGQ6IFQpID0+IHZvaWRcbn1cblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEZyYWdtZW50U2lnbmFsczxUPlxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBhcHBlbmQ6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgICAgICByZW1vdmU6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICB9XG5cbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHlpZWxkKiB0aGlzLl9jaGlsZHJlblxuICAgIH1cblxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgYXBwZW5kKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgIHRoaXMuZW1pdChcImFwcGVuZFwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIHJlbW92ZShjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJyZW1vdmVcIiwgY2hpbGQpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBGcmFnbWVudFNpZ25hbHM8VD4+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEZyYWdtZW50U2lnbmFsczxUPltTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxudHlwZSBEZWVwSW5mZXI8UyBleHRlbmRzIHN0cmluZz4gPSBSZXR1cm5UeXBlPEdMaWIuVmFyaWFudDxTPltcImRlZXBVbnBhY2tcIl0+XG50eXBlIFJlY3Vyc2l2ZUluZmVyPFMgZXh0ZW5kcyBzdHJpbmc+ID0gUmV0dXJuVHlwZTxHTGliLlZhcmlhbnQ8Uz5bXCJyZWN1cnNpdmVVbnBhY2tcIl0+XG5cbmV4cG9ydCB0eXBlIEFjY2Vzc2VkPFQ+ID0gVCBleHRlbmRzIEFjY2Vzc29yPGluZmVyIFY+ID8gViA6IG5ldmVyXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWRlY2xhcmF0aW9uLW1lcmdpbmdcbmV4cG9ydCBjbGFzcyBBY2Nlc3NvcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBGdW5jdGlvbiB7XG4gICAgc3RhdGljICRndHlwZSA9IEdPYmplY3QuVFlQRV9KU09CSkVDVCBhcyB1bmtub3duIGFzIEdPYmplY3QuR1R5cGU8QWNjZXNzb3I+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICAvLyBUT0RPOiBhdXRvIHVuc3ViIHdoZW4gYSBzY29wZSBpcyBhdmFpbGFibGU/XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICByZXR1cm4gdGhpcy4jZ2V0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgYXM8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2NhbGw8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hcyh0cmFuc2Zvcm0pXG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBBY2Nlc3Nvcjwke3RoaXMuZ2V0KCl9PmBcbiAgICB9XG5cbiAgICBbU3ltYm9sLnRvUHJpbWl0aXZlXSgpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQWNjZXNzb3IgaW1wbGljaXRseSBjb252ZXJ0ZWQgdG8gYSBwcmltaXRpdmUgdmFsdWUuXCIpXG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKClcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzb3I8VD4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICA8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj5cbn1cblxuZXhwb3J0IHR5cGUgU2V0dGVyPFQ+ID0ge1xuICAgICh2YWx1ZTogVCk6IHZvaWRcbiAgICAodmFsdWU6IChwcmV2OiBUKSA9PiBUKTogdm9pZFxufVxuXG5leHBvcnQgdHlwZSBTdGF0ZTxUPiA9IFtBY2Nlc3NvcjxUPiwgU2V0dGVyPFQ+XVxuXG4vKipcbiAqIENyZWF0ZSBhIHdyaXRhYmxlIHNpZ25hbC5cbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW50aWFsIHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqIEByZXR1cm5zIEFuIGBBY2Nlc3NvcmAgYW5kIGEgc2V0dGVyIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZTxUPihpbml0OiBUKTogU3RhdGU8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICBjb25zdCBzZXQgPSAobmV3VmFsdWU6IHVua25vd24pID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWU6IFQgPSB0eXBlb2YgbmV3VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZVxuICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIC8vIHJ1bm5pbmcgY2FsbGJhY2tzIG1pZ2h0IG11dGF0ZSBzdWJzY3JpYmVyc1xuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldCBhcyBTZXR0ZXI8VD5dXG59XG5cbmNvbnN0IGVtcHR5ID0gU3ltYm9sKFwiZW1wdHkgY29tcHV0ZWQgdmFsdWVcIilcblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcjxUPihmbjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gVCk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFRcbiAgICBsZXQgcHJldkRlcHMgPSBuZXcgTWFwPEFjY2Vzc29yLCBEaXNwb3NlRnVuY3Rpb24+KClcblxuICAgIGNvbnN0IGVmZmVjdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVwcyA9IG5ldyBTZXQ8QWNjZXNzb3I+KClcbiAgICAgICAgdmFsdWUgPSBmbigodikgPT4gKGRlcHMuYWRkKHYpLCB2LmdldCgpKSlcblxuICAgICAgICBjb25zdCBuZXdEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICAgICAgZm9yIChjb25zdCBbZGVwLCB1bnN1Yl0gb2YgcHJldkRlcHMpIHtcbiAgICAgICAgICAgIGlmICghZGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3RGVwcy5zZXQoZGVwLCB1bnN1YilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoY29uc3QgZGVwIG9mIGRlcHMpIHtcbiAgICAgICAgICAgIGlmICghbmV3RGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgZGVwLnN1YnNjcmliZShlZmZlY3QpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJldkRlcHMgPSBuZXdEZXBzXG4gICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgIH1cblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgWywgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gZW1wdHkgPyBmbigodikgPT4gdi5nZXQoKSkgOiB2YWx1ZVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkQXJnczxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBmcm9tIGEgcHJvZHVjZXIgZnVuY3Rpb24gdGhhdCB0cmFja3MgaXRzIGRlcGVuZGVuY2llcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPG51bWJlcj4gPSBjcmVhdGVDb21wdXRlZCgoZ2V0KSA9PiBnZXQoYSkgKyBnZXQoYikpXG4gKiBgYGBcbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIGxldCdzIHlvdSB0cmFjayBkZXBlbmRlbmNpZXNcbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8VD4oXG4gICAgcHJvZHVjZXI6ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGdpdmVuIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgVCA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBUKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKFxuICAgIC4uLmFyZ3M6XG4gICAgICAgIHwgW3Byb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiB1bmtub3duXVxuICAgICAgICB8IFtkZXBzOiBBcnJheTxBY2Nlc3Nvcj4sIHRyYW5zZm9ybT86ICguLi5hcmdzOiB1bmtub3duW10pID0+IHVua25vd25dXG4pIHtcbiAgICBjb25zdCBbZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybV0gPSBhcmdzXG4gICAgaWYgKHR5cGVvZiBkZXBzT3JQcm9kdWNlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyKGRlcHNPclByb2R1Y2VyKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZEFyZ3MoZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybSlcbiAgICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcblxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgJHtrZXl9YClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgVCxcbj4gPSBPW1wiJHNpZ25hbHNcIl1bU10gZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFJcbiAgICA/IHZvaWQgZXh0ZW5kcyBSXG4gICAgICAgID8gKC4uLmFyZ3M6IFsuLi5QYXJhbWV0ZXJzPE9bXCIkc2lnbmFsc1wiXVtTXT4sIGN1cnJlbnRWYWx1ZTogVF0pID0+IFRcbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncywgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuZGlzY29ubmVjdC5jYWxsKG9iamVjdCwgaWQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzaWduYWwgZnJvbSBhIHByb3ZpZXIgZnVuY3Rpb24uXG4gKiBUaGUgcHJvdmlkZXIgaXMgY2FsbGVkIHdoZW4gdGhlIGZpcnN0IHN1YnNjcmliZXIgYXBwZWFycyBhbmQgdGhlIHJldHVybmVkIGRpc3Bvc2VcbiAqIGZ1bmN0aW9uIGZyb20gdGhlIHByb3ZpZGVyIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIG51bWJlciBvZiBzdWJzY3JpYmVycyBkcm9wIHRvIHplcm8uXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgdmFsdWUgPSBjcmVhdGVFeHRlcm5hbCgwLCAoc2V0KSA9PiB7XG4gKiAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gc2V0KCh2KSA9PiB2ICsgMSkpXG4gKiAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIHNob3VsZCByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlcm5hbDxUPihcbiAgICBpbml0OiBULFxuICAgIHByb2R1Y2VyOiAoc2V0OiBTZXR0ZXI8VD4pID0+IERpc3Bvc2VGdW5jdGlvbixcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBEaXNwb3NlRnVuY3Rpb25cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBwcm9kdWNlcigodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlOiBUID0gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoY3VycmVudFZhbHVlKSA6IHZcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbnR5cGUgU2V0dGluZ3M8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+ID0ge1xuICAgIFtLIGluIGtleW9mIFQgYXMgVW5jYXBpdGFsaXplPFBhc2NhbGlmeTxLPj5dOiBBY2Nlc3NvcjxSZWN1cnNpdmVJbmZlcjxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxEZWVwSW5mZXI8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgdHlwZSBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcblxudHlwZSBHT2JqID0gR09iamVjdC5PYmplY3RcbmV4cG9ydCB0eXBlIENDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSB7IG5ldyAocHJvcHM6IGFueSk6IFQgfVxuZXhwb3J0IHR5cGUgRkM8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IChwcm9wczogYW55KSA9PiBUXG5cbnR5cGUgQ3NzU2V0dGVyID0gKG9iamVjdDogR09iaiwgY3NzOiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIHRleHROb2RlKG5vZGU6IHN0cmluZyB8IG51bWJlcik6IEdPYmpcbiAgICBhcHBlbmRDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHJlbW92ZUNoaWxkKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmopOiB2b2lkXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgLy8gc3RyaW5nW10gY2FuIGJlIHVzZSB0byBkZWxheSBzZXR0aW5nIHByb3BzIGFmdGVyIGNoaWxkcmVuXG4gICAgLy8gZS5nIEd0ay5TdGFja1tcInZpc2libGVDaGlsZE5hbWVcIl0gZGVwZW5kcyBvbiBjaGlsZHJlblxuICAgIGluaXRQcm9wcyhjdG9yOiB1bmtub3duLCBwcm9wczogYW55KTogdm9pZCB8IHN0cmluZ1tdXG4gICAgZGVmYXVsdENsZWFudXAob2JqZWN0OiBHT2JqKTogdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpOiBhbnkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgdGV4dE5vZGU6IG1pc3NpbmdJbXBsLFxuICAgIGFwcGVuZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICByZW1vdmVDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q3NzOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDbGFzczogbWlzc2luZ0ltcGwsXG4gICAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsXG4gICAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMCxcbn1cbiIsICJleHBvcnQgY2xhc3MgU2NvcGUge1xuICAgIHN0YXRpYyBjdXJyZW50PzogU2NvcGUgfCBudWxsXG5cbiAgICBwYXJlbnQ/OiBTY29wZSB8IG51bGxcbiAgICBjb250ZXh0cyA9IG5ldyBNYXA8Q29udGV4dCwgdW5rbm93bj4oKVxuXG4gICAgcHJpdmF0ZSBjbGVhbnVwcyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudGVkID0gZmFsc2VcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudD86IFNjb3BlIHwgbnVsbCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudFxuICAgIH1cblxuICAgIG9uQ2xlYW51cChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzPy5hZGQoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgb25Nb3VudChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgJiYgIXRoaXMucGFyZW50Lm1vdW50ZWQpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5hZGQoY2FsbGJhY2spXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBydW48VD4oZm46ICgpID0+IFQpIHtcbiAgICAgICAgY29uc3QgcHJldiA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgU2NvcGUuY3VycmVudCA9IHRoaXNcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuKClcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKVxuICAgICAgICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZVxuICAgICAgICAgICAgU2NvcGUuY3VycmVudCA9IHByZXZcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIHRoaXMuY2xlYW51cHMuY2xlYXIoKVxuICAgICAgICB0aGlzLmNvbnRleHRzLmNsZWFyKClcbiAgICAgICAgZGVsZXRlIHRoaXMucGFyZW50XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDb250ZXh0PFQgPSBhbnk+ID0ge1xuICAgIHVzZSgpOiBUXG4gICAgcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSXG4gICAgKHByb3BzOiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSk6IEpTWC5FbGVtZW50XG59XG5cbi8qKlxuICogRXhhbXBsZSBVc2FnZTpcbiAqIGBgYHRzeFxuICogY29uc3QgTXlDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcImZhbGxiYWNrLXZhbHVlXCIpXG4gKlxuICogZnVuY3Rpb24gQ29uc3VtZXJDb21wb25lbnQoKSB7XG4gKiAgIGNvbnN0IHZhbHVlID0gTXlDb250ZXh0LnVzZSgpXG4gKlxuICogICByZXR1cm4gPEd0ay5MYWJlbCBsYWJlbD17dmFsdWV9IC8+XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gUHJvdmlkZXJDb21wb25lbnQoKSB7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICA8TXlDb250ZXh0IHZhbHVlPVwibXktdmFsdWVcIj5cbiAqICAgICAgICAgeygpID0+IDxDb25zdW1lckNvbXBvbmVudCAvPn1cbiAqICAgICAgIDwvTXlDb250ZXh0PlxuICogICAgIDwvR3RrLkJveD5cbiAqICAgKVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFQ+KGRlZmF1bHRWYWx1ZTogVCk6IENvbnRleHQ8VD4ge1xuICAgIGxldCBjdHg6IENvbnRleHQ8VD5cblxuICAgIGZ1bmN0aW9uIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUiB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICAgICAgICBzY29wZS5jb250ZXh0cy5zZXQoY3R4LCB2YWx1ZSlcbiAgICAgICAgcmV0dXJuIHNjb3BlLnJ1bihmbilcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1c2UoKTogVCB7XG4gICAgICAgIGxldCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgd2hpbGUgKHNjb3BlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHNjb3BlLmNvbnRleHRzLmdldChjdHgpXG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHZhbHVlIGFzIFRcbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnRleHQoeyB2YWx1ZSwgY2hpbGRyZW4gfTogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pIHtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGUodmFsdWUsIGNoaWxkcmVuKVxuICAgIH1cblxuICAgIHJldHVybiAoY3R4ID0gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgICAgIHByb3ZpZGUsXG4gICAgICAgIHVzZSxcbiAgICB9KSlcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBzY29wZSB0aGF0IG93bnMgdGhlIGN1cnJlbnRseSBydW5uaW5nIGNvZGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyBUaGlzIGNhbGxiYWNrIGdldHMgcnVuIHdpdGhvdXQgYW4gb3duZXIgc2NvcGUuXG4gKiAgIC8vIFJlc3RvcmUgb3duZXIgdmlhIHNjb3BlLnJ1bjpcbiAqICAgc2NvcGUucnVuKCgpID0+IHtcbiAqICAgICBjb25zdCBmb28gPSBGb29Db250ZXh0LnVzZSgpXG4gKiAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAqICAgICAgIHByaW50KFwic29tZSBjbGVhbnVwXCIpXG4gKiAgICAgfSlcbiAqICAgfSlcbiAqIH0sIDEwMDApXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3BlKCk6IFNjb3BlIHtcbiAgICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICBpZiAoIXNjb3BlKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IGdldCBzY29wZTogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIilcbiAgICB9XG5cbiAgICByZXR1cm4gc2NvcGVcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjbGVhbnVwIGNhbGxiYWNrIHRvIHRoZSBjdXJyZW50IHtAbGluayBTY29wZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbkNsZWFudXAoY2xlYW51cClcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0byBydW4gd2hlbiB0aGUgY3VycmVudGx5IHJ1bm5pbmcge0BsaW5rIFNjb3BlfSByZXR1cm5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VudChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJjYW5ub3QgYXR0YWNoIG9uTW91bnQ6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uTW91bnQoY2xlYW51cClcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcm9vdCB7QGxpbmsgU2NvcGV9IHRoYXQgd2hlbiBkaXNwb3NlZCB3aWxsIHJlbW92ZVxuICogYW55IGNoaWxkIHNpZ25hbCBoYW5kbGVyIG9yIHN0YXRlIHN1YnNjcmliZXIuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzeFxuICogY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICogICBsZXQgcm9vdDogR3RrLldpbmRvd1xuICpcbiAqICAgY29uc3QgW3N0YXRlXSA9IGNyZWF0ZVN0YXRlKFwidmFsdWVcIilcbiAqXG4gKiAgIGNvbnN0IHJlbW92ZSA9ICgpID0+IHtcbiAqICAgICByb290LmRlc3Ryb3koKVxuICogICAgIGRpc3Bvc2UoKVxuICogICB9XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuV2luZG93ICQ9eyhzZWxmKSA9PiAocm9vdCA9IHNlbGYpfT5cbiAqICAgICAgIDxHdGsuQm94PlxuICogICAgICAgICA8R3RrLkxhYmVsIGxhYmVsPXtzdGF0ZX0gLz5cbiAqICAgICAgICAgPEd0ay5CdXR0b24gJGNsaWNrZWQ9e3JlbW92ZX0gLz5cbiAqICAgICAgIDwvR3RrLkJveD5cbiAqICAgICA8L0d0ay5XaW5kb3c+XG4gKiAgIClcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3Q8VD4oZm46IChkaXNwb3NlOiAoKSA9PiB2b2lkKSA9PiBUKSB7XG4gICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbClcbiAgICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpXG59XG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBGb3JQcm9wczxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+IHtcbiAgICBlYWNoOiBBY2Nlc3NvcjxJdGVyYWJsZTxJdGVtPj5cbiAgICBjaGlsZHJlbjogKGl0ZW06IEl0ZW0sIGluZGV4OiBBY2Nlc3NvcjxudW1iZXI+KSA9PiBFbFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRWwsIGl0ZW06IEl0ZW0sIGluZGV4OiBudW1iZXIpID0+IHZvaWQpXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUga2V5IGZvciBlYWNoIGl0ZW0uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0IGl0ZW1zIGFyZSBtYXBwZWQgYnk6XG4gICAgICogLSB2YWx1ZSBpbiBjYXNlIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgKiAtIHJlZmVyZW5jZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBpZD86IChpdGVtOiBJdGVtKSA9PiBLZXkgfCBJdGVtXG59XG5cbi8vIFRPRE86IHN1cHBvcnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgZnVuY3Rpb24gRm9yPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4oe1xuICAgIGVhY2gsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbiAgICBpZCA9IChpdGVtOiBJdGVtKSA9PiBpdGVtLFxufTogRm9yUHJvcHM8SXRlbSwgRWwsIEtleT4pOiBGcmFnbWVudDxFbD4ge1xuICAgIHR5cGUgTWFwSXRlbSA9IHsgaXRlbTogSXRlbTsgY2hpbGQ6IEVsOyBpbmRleDogU3RhdGU8bnVtYmVyPjsgc2NvcGU6IFNjb3BlIH1cblxuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPEl0ZW0gfCBLZXksIE1hcEl0ZW0+KClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFbD4oKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9OiBNYXBJdGVtKSB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlOiBJdGVyYWJsZTxJdGVtPikge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdXG4gICAgICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZClcbiAgICAgICAgY29uc3QgaWRTZXQgPSBuZXcgU2V0KGlkcylcblxuICAgICAgICAvLyBjbGVhbnVwIGNoaWxkcmVuIG1pc3NpbmcgZnJvbSBhcnJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgLy8gdGhlcmUgaXMgbm8gZ2VuZXJpYyB3YXkgdG8gaW5zZXJ0IGNoaWxkIGF0IGluZGV4XG4gICAgICAgICAgICAvLyBzbyB3ZSBzb3J0IGJ5IHJlbW92aW5nIGV2ZXJ5IGNoaWxkIGFuZCByZWFwcGVuZGluZyBpbiBvcmRlclxuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlKHZhbHVlLmNoaWxkKVxuXG4gICAgICAgICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZGV4IGFuZCBhZGQgbmV3IGl0ZW1zXG4gICAgICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gaWRzW2ldXG4gICAgICAgICAgICBpZiAobWFwLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICB9ID0gbWFwLmdldChrZXkpIVxuICAgICAgICAgICAgICAgIHNldEluZGV4KGkpXG4gICAgICAgICAgICAgICAgaWYgKFsuLi5mcmFnbWVudF0uc29tZSgoY2gpID0+IGNoID09PSBjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpXG4gICAgICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQoaXRlbSwgaW5kZXgpKVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pXG4gICAgICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZGlzcG9zZSgpXG5cbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgfVxuXG4gICAgICAgIG1hcC5jbGVhcigpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBXaXRoUHJvcHM8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50PiB7XG4gICAgdmFsdWU6IEFjY2Vzc29yPFQ+XG4gICAgY2hpbGRyZW46ICh2YWx1ZTogVCkgPT4gRSB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjogR3RrLldpZGdldC5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqIC0gKipHbm9tZSoqOiBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95XG4gICAgICovXG4gICAgY2xlYW51cD86IG51bGwgfCAoKGVsZW1lbnQ6IEUpID0+IHZvaWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBXaXRoPFQsIEUgZXh0ZW5kcyBKU1guRWxlbWVudD4oe1xuICAgIHZhbHVlLFxuICAgIGNoaWxkcmVuOiBta0NoaWxkLFxuICAgIGNsZWFudXAsXG59OiBXaXRoUHJvcHM8VCwgRT4pOiBGcmFnbWVudDxFPiB7XG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEU+KClcblxuICAgIGxldCBzY29wZTogU2NvcGVcblxuICAgIGZ1bmN0aW9uIHJlbW92ZShjaGlsZDogRSkge1xuICAgICAgICBmcmFnbWVudC5yZW1vdmUoY2hpbGQpXG4gICAgICAgIGlmIChzY29wZSkgc2NvcGUuZGlzcG9zZSgpXG5cbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2sodjogVCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50KSB7XG4gICAgICAgICAgICByZW1vdmUoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBmcmFnbWVudCkge1xuICAgICAgICAgICAgcmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuaW1wb3J0IHsgYXBwZW5kLCBzZXRUeXBlLCBzaWduYWxOYW1lLCB0eXBlIENDUHJvcHMgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIFRoaXNQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+ID0gUGFydGlhbDxcbiAgICBPbWl0PENDUHJvcHM8U2VsZiwgeyBbSyBpbiBrZXlvZiBTZWxmXTogU2VsZltLXSB9PiwgXCIkXCIgfCBcIiRjb25zdHJ1Y3RvclwiPlxuPiAmIHtcbiAgICB0aGlzOiBTZWxmXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHNlbGYuY29ubmVjdChzaWduYWxOYW1lKGtleSksIHZhbHVlKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpXG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihFcnJvcihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIikpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICIqIHtcbiAgY29sb3I6ICNlYmRiYjI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyODI4Mjg7XG4gIGZvbnQtZmFtaWx5OiBcIkNvdXNpbmUgTmVyZCBGb250IE1vbm9cIjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG5idXR0b24ge1xuICBhbGw6IHVuc2V0O1xuICBtaW4td2lkdGg6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbn1cblxuLmJhciB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmE2YjM0O1xuICBwYWRkaW5nOiA2cHg7XG59XG5cbmJ1dHRvbi5mb2N1c2VkIGxhYmVsLCAuZnVsbHNjcmVlbiB7XG4gIGNvbG9yOiAjZmE2YjM0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyODI4O1xufVxuXG4ubmV0d29yayB7XG4gIG1pbi13aWR0aDogODVweDtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR09iamVjdCwgeyByZWdpc3Rlciwgc2lnbmFsIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxuZXhwb3J0IG5hbWVzcGFjZSBQcm9jZXNzIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIFNpZ25hbFNpZ25hdHVyZXMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5TaWduYWxTaWduYXR1cmVzIHtcbiAgICAgICAgc3Rkb3V0OiBQcm9jZXNzW1wic3Rkb3V0XCJdXG4gICAgICAgIHN0ZGVycjogUHJvY2Vzc1tcInN0ZGVyclwiXVxuICAgICAgICBleGl0OiBQcm9jZXNzW1wiZXhpdFwiXVxuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIENvbnN0cnVjdG9yUHJvcHMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5Db25zdHJ1Y3RvclByb3BzIHtcbiAgICAgICAgYXJndjogc3RyaW5nW11cbiAgICB9XG59XG5cbkByZWdpc3RlcigpXG5leHBvcnQgY2xhc3MgUHJvY2VzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBAc2lnbmFsKFN0cmluZylcbiAgICBwcm90ZWN0ZWQgc3Rkb3V0KG91dDogc3RyaW5nKSB7XG4gICAgICAgIHZvaWQgb3V0XG4gICAgfVxuXG4gICAgQHNpZ25hbChTdHJpbmcpXG4gICAgcHJvdGVjdGVkIHN0ZGVycihlcnI6IHN0cmluZykge1xuICAgICAgICB2b2lkIGVyclxuICAgIH1cblxuICAgIEBzaWduYWwoTnVtYmVyLCBCb29sZWFuKVxuICAgIHByb3RlY3RlZCBleGl0KGNvZGU6IG51bWJlciwgc2lnbmFsZWQ6IGJvb2xlYW4pIHtcbiAgICAgICAgdm9pZCBbY29kZSwgc2lnbmFsZWRdXG4gICAgfVxuXG4gICAgI2VuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuICAgICNvdXRTdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW1cbiAgICAjZXJyU3RyZWFtOiBHaW8uRGF0YUlucHV0U3RyZWFtXG4gICAgI2luU3RyZWFtOiBHaW8uRGF0YU91dHB1dFN0cmVhbVxuICAgICNwcm9jZXNzOiBHaW8uU3VicHJvY2Vzc1xuXG4gICAgI3JlYWRTdHJlYW0oc3RyZWFtOiBHaW8uRGF0YUlucHV0U3RyZWFtKSB7XG4gICAgICAgIHN0cmVhbS5yZWFkX2xpbmVfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBudWxsLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtvdXRwdXRdID0gc3RyZWFtLnJlYWRfbGluZV9maW5pc2hfdXRmOChyZXMpXG4gICAgICAgICAgICAgICAgaWYgKG91dHB1dCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RyZWFtID09PSB0aGlzLiNlcnJTdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RkZXJyKG91dHB1dC50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0ZG91dChvdXRwdXQudHJpbSgpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuI3JlYWRTdHJlYW0oc3RyZWFtKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBQcm9jZXNzLlNpZ25hbFNpZ25hdHVyZXM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIFByb2Nlc3MuU2lnbmFsU2lnbmF0dXJlc1tTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBGb3JjZSBxdWl0IHRoZSBzdWJwcm9jZXNzLlxuICAgICAqL1xuICAgIGtpbGwoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3MuZm9yY2VfZXhpdCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2VuZCBhIHNpZ25hbCB0byB0aGUgc3VicHJvY2Vzcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaWduYWwgU2lnbmFsIG51bWJlciB0byBiZSBzZW50XG4gICAgICovXG4gICAgc2lnbmFsKHNpZ25hbDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3Muc2VuZF9zaWduYWwoc2lnbmFsKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gc3luY2hyb25vdXNseS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW5cbiAgICAgKi9cbiAgICB3cml0ZShzdHI6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLiNpblN0cmVhbS5wdXRfc3RyaW5nKHN0cilcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhIGxpbmUgdG8gdGhlIHN1YnByb2Nlc3MnIHN0ZGluIGFzeW5jaHJvbm91c2x5LlxuICAgICAqXG4gICAgICogQHBhcmFtIHN0ciBTdHJpbmcgdG8gYmUgd3JpdHRlbiB0byBzdGRpblxuICAgICAqL1xuICAgIGFzeW5jIHdyaXRlQXN5bmMoc3RyOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuI2luU3RyZWFtLndyaXRlX2FsbF9hc3luYyhcbiAgICAgICAgICAgICAgICB0aGlzLiNlbmNvZGVyLmVuY29kZShzdHIpLFxuICAgICAgICAgICAgICAgIEdMaWIuUFJJT1JJVFlfREVGQVVMVCxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodm9pZCB0aGlzLiNpblN0cmVhbS53cml0ZV9hbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgYXJndiB9OiBQcm9jZXNzLkNvbnN0cnVjdG9yUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICBjb25zdCBwcm9jZXNzID0gKHRoaXMuI3Byb2Nlc3MgPSBHaW8uU3VicHJvY2Vzcy5uZXcoXG4gICAgICAgICAgICBhcmd2LFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERJTl9QSVBFIHxcbiAgICAgICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURE9VVF9QSVBFIHxcbiAgICAgICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFLFxuICAgICAgICApKVxuXG4gICAgICAgIHRoaXMuI2luU3RyZWFtID0gR2lvLkRhdGFPdXRwdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZGluX3BpcGUoKSEpXG4gICAgICAgIHRoaXMuI291dFN0cmVhbSA9IEdpby5EYXRhSW5wdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZG91dF9waXBlKCkhKVxuICAgICAgICB0aGlzLiNlcnJTdHJlYW0gPSBHaW8uRGF0YUlucHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRlcnJfcGlwZSgpISlcblxuICAgICAgICB0aGlzLiNyZWFkU3RyZWFtKHRoaXMuI291dFN0cmVhbSlcbiAgICAgICAgdGhpcy4jcmVhZFN0cmVhbSh0aGlzLiNlcnJTdHJlYW0pXG5cbiAgICAgICAgcHJvY2Vzcy53YWl0X2FzeW5jKG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcHJvY2Vzcy53YWl0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICAvLyBpZ25vcmVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX2V4aXRlZCgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leGl0KHByb2Nlc3MuZ2V0X2V4aXRfc3RhdHVzKCksIGZhbHNlKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfaWZfc2lnbmFsZWQoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF90ZXJtX3NpZygpLCB0cnVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZC5cbiAgICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZ1xuICAgICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LlxuICAgICAqL1xuICAgIHN0YXRpYyBzdWJwcm9jZXNzdihjbWQ6IHN0cmluZ1tdKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvY2Vzcyh7IGFyZ3Y6IGNtZCB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZFxuICAgICAqIHdoaWNoIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKi9cbiAgICBzdGF0aWMgc3VicHJvY2VzcyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLnN1YnByb2Nlc3N2KGFyZ3YhKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIHN5bmNocm9ub3VzbHkuXG4gICAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmdcbiAgICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlY3YoY21kOiBzdHJpbmdbXSkge1xuICAgICAgICBjb25zdCBwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgY21kLFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSB8IEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUsXG4gICAgICAgIClcblxuICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjgobnVsbCwgbnVsbClcbiAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X3N1Y2Nlc3NmdWwoKSkge1xuICAgICAgICAgICAgcmV0dXJuIG91dC50cmltKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBjb21tYW5kIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlYyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWN2KGFyZ3YhKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIGFzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nXG4gICAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWNBc3luY3YoY21kOiBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIGNvbnN0IHByb2Nlc3MgPSBHaW8uU3VicHJvY2Vzcy5uZXcoXG4gICAgICAgICAgICBjbWQsXG4gICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFIHwgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfYXN5bmMobnVsbCwgbnVsbCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IFssIG91dCwgZXJyXSA9IHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfc3VjY2Vzc2Z1bCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShvdXQudHJpbSgpKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnIudHJpbSgpKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIGFzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBjb21tYW5kIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlY0FzeW5jKGNtZDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYi5zaGVsbF9wYXJzZV9hcmd2KGNtZClcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jdihhcmd2ISlcbiAgICB9XG59XG5cbnR5cGUgQXJncyA9IHtcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdXG4gICAgb3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkXG4gICAgZXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKGFyZ3M6IEFyZ3MpOiBQcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgb25PdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQsXG4gICAgb25FcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWQsXG4pOiBQcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKSA/IFByb2Nlc3Muc3VicHJvY2Vzc3YoY21kKSA6IFByb2Nlc3Muc3VicHJvY2VzcyhjbWQpXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0Vycm9yfSBUaHJvd3Mgc3RkZXJyICovXG5leHBvcnQgZnVuY3Rpb24gZXhlYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY21kKSA/IFByb2Nlc3MuZXhlY3YoY21kKSA6IFByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjQXN5bmN2KGNtZClcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjQXN5bmMoY21kKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3MoaW5pdDogc3RyaW5nLCBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSk6IEFjY2Vzc29yPHN0cmluZz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHByb2M6IFByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgR09iamVjdCwgeyByZWdpc3Rlciwgc2lnbmFsIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCIuL3Byb2Nlc3MuanNcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5cbmV4cG9ydCBuYW1lc3BhY2UgVGltZXIge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2lnbmFsU2lnbmF0dXJlcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgICAgICBub3coKTogdm9pZFxuICAgICAgICBjYW5jZWxsZWQoKTogdm9pZFxuICAgIH1cbn1cblxuQHJlZ2lzdGVyKClcbmV4cG9ydCBjbGFzcyBUaW1lciBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBUaW1lci5TaWduYWxTaWduYXR1cmVzXG5cbiAgICBAc2lnbmFsKClcbiAgICBwcm90ZWN0ZWQgbm93KCkge31cblxuICAgIEBzaWduYWwoKVxuICAgIHByb3RlY3RlZCBjYW5jZWxsZWQoKSB7fVxuXG4gICAgc3RhdGljIGludGVydmFsKGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGltbWVkaWF0ZS5pc19kZXN0cm95ZWQoKSkgaW1tZWRpYXRlLmRlc3Ryb3koKVxuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBpbW1lZGlhdGUgPSBzZXRUaW1lb3V0KG5vdylcbiAgICAgICAgY29uc3Qgc291cmNlID0gc2V0SW50ZXJ2YWwobm93LCBpbnRlcnZhbClcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgc3RhdGljIHRpbWVvdXQoaW50ZXJ2YWw6IG51bWJlciwgY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gVGltZXIubmV3KGNhbGxiYWNrLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldFRpbWVvdXQobm93LCBpbnRlcnZhbClcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgc3RhdGljIGlkbGUoY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gVGltZXIubmV3KGNhbGxiYWNrLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldFRpbWVvdXQobm93KVxuICAgICAgICByZXR1cm4gdGltZXJcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBuZXcob25Ob3c/OiAoKSA9PiB2b2lkLCBvbkNhbmNlbGxlZD86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgdGltZXIgPSBuZXcgVGltZXIoKVxuICAgICAgICBjb25zdCBub3cgPSB0aW1lci5jb25uZWN0KFwibm93XCIsICgpID0+IHZvaWQgb25Ob3c/LigpKVxuICAgICAgICBjb25zdCBjYW5jZWxsZWQgPSB0aW1lci5jb25uZWN0KFwiY2FuY2VsbGVkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRpbWVyLmRpc2Nvbm5lY3Qobm93KVxuICAgICAgICAgICAgdGltZXIuZGlzY29ubmVjdChjYW5jZWxsZWQpXG4gICAgICAgICAgICBvbkNhbmNlbGxlZD8uKClcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHsgdGltZXIsIG5vdzogKCkgPT4gdGltZXIubm93KCkgfVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIFRpbWVyLlNpZ25hbFNpZ25hdHVyZXM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIFRpbWVyLlNpZ25hbFNpZ25hdHVyZXNbU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY2FuY2VsKCkge1xuICAgICAgICB0aGlzLmNhbmNlbGxlZCgpXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgeyBpbnRlcnZhbCwgdGltZW91dCwgaWRsZSB9ID0gVGltZXJcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBHTGliLlNvdXJjZSB8IG51bGwgPSBudWxsXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcblxuICAgIGZ1bmN0aW9uIHNldCh2YWx1ZTogVCkge1xuICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29tcHV0ZSgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGV4ZWNPckZuKGN1cnJlbnRWYWx1ZSlcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0KHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXhlY0FzeW5jKGV4ZWNPckZuKS50aGVuKChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGNvbXB1dGUpXG4gICAgICAgICAgICB0aW1lciA9IHNldEludGVydmFsKGNvbXB1dGUsIGl2YWwpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwICYmIHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcilcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuY29uc3QgZHVtbXlCdWlsZGVyID0gbmV3IEd0ay5CdWlsZGVyKClcblxuY29uc3QgeyBpbnRyaW5zaWNFbGVtZW50cyB9ID0gY29uZmlndWUoe1xuICAgIGluaXRQcm9wcyhjdG9yKSB7XG4gICAgICAgIGlmIChjdG9yID09PSBHdGsuU3RhY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgR3RrLlN0YWNrLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcInZpc2libGVDaGlsZE5hbWVcIixcbiAgICAgICAgICAgICAgICBcInZpc2libGVfY2hpbGRfbmFtZVwiLFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgcmV0dXJuIGtleXNcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGN0eCA9IG9iamVjdC5nZXRfc3R5bGVfY29udGV4dCgpXG4gICAgICAgIGxldCBwcm92aWRlcjogR3RrLkNzc1Byb3ZpZGVyXG5cbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGNzczogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNzcy5pbmNsdWRlcyhcIntcIikgfHwgIWNzcy5pbmNsdWRlcyhcIn1cIikpIHtcbiAgICAgICAgICAgICAgICBjc3MgPSBgKiB7ICR7Y3NzfSB9YFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpXG5cbiAgICAgICAgICAgIHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKGNzcylcbiAgICAgICAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzLmdldCgpKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyKGNzcy5nZXQoKSkpXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdGV4dE5vZGUodGV4dCkge1xuICAgICAgICByZXR1cm4gR3RrLkxhYmVsLm5ldyh0ZXh0LnRvU3RyaW5nKCkpXG4gICAgfSxcblxuICAgIC8vIGBzZXRfY2hpbGRgIGFuZCBlc3BlY2lhbGx5IGByZW1vdmVgIG1pZ2h0IGJlIHdheSB0b28gZ2VuZXJpYyBhbmQgdGhlcmUgbWlnaHRcbiAgICAvLyBiZSBjYXNlcyB3aGVyZSBpdCBkb2VzIG5vdCBhY3R1YWxseSBkbyB3aGF0IHdlIHdhbnQgaXQgdG8gZG9cbiAgICAvL1xuICAgIC8vIGlmIHRoZXJlIGlzIGEgdXNlY2FzZSBmb3IgZWl0aGVyIG9mIHRoZXNlIHR3byB0aGF0IGRvZXMgc29tZXRoaW5nIGVsc2UgdGhhblxuICAgIC8vIHdlIGV4cGVjdCBpdCB0byBkbyBoZXJlIGluIGEgSlNYIGNvbnRleHQgd2UgaGF2ZSB0byBjaGVjayBmb3Iga25vd24gaW5zdGFuY2VzXG4gICAgcmVtb3ZlQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLldpZGdldCAmJiBjaGlsZCBpbnN0YW5jZW9mIEd0ay5FdmVudENvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlX2NvbnRyb2xsZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXCJzZXRfY2hpbGRcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwicmVtb3ZlXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmUoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApXG4gICAgfSxcbiAgICBhcHBlbmRDaGlsZChwYXJlbnQsIGNoaWxkKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLkFkanVzdG1lbnQgJiZcbiAgICAgICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgICAgIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiZcbiAgICAgICAgICAgIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5TdGFjayAmJlxuICAgICAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICAgICAgY2hpbGQubmFtZSAhPT0gbnVsbCAmJlxuICAgICAgICAgICAgZ2V0VHlwZShjaGlsZCkgPT09IFwibmFtZWRcIlxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuYWRkX25hbWVkKGNoaWxkLCBjaGlsZC5uYW1lKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlBvcG92ZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24pIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgICAgIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuUG9wb3Zlck1lbnUpXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAgICAgLy8gVE9ETzpcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF93aW5kb3coY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuVGV4dEJ1ZmZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuVGV4dFZpZXcpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQnVpbGRhYmxlKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgYWRkICR7Y2hpbGR9IHRvICR7cGFyZW50fWApXG4gICAgfSxcbn0pXG5cbmV4cG9ydCB7IEZyYWdtZW50LCBpbnRyaW5zaWNFbGVtZW50cyB9XG5leHBvcnQgeyBqc3gsIGpzeHMgfSBmcm9tIFwiLi4vanN4L2pzeC5qc1wiXG4iLCAiaW1wb3J0IHsgV2l0aCwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGF0ZURpc3BsYXkoKSB7XG4gICAgY29uc3QgdGltZSA9IGNyZWF0ZVBvbGwoXCJcIiwgMTAwMCwgXCJkYXRlICcrJV9JOiVNJ1wiKVxuICAgIGNvbnN0IGRhdGUgPSBjcmVhdGVQb2xsKFwiXCIsIDEwMDAsIFwiZGF0ZSAnKyVfbS8lX2QvJVknXCIpXG4gICAgY29uc3QgW3Nob3dpbmdEYXRlLCBzZXRTaG93aW5nRGF0ZV0gPSBjcmVhdGVTdGF0ZShmYWxzZSlcblxuICAgIGNvbnN0IHRvZ2dsZURhdGUgPSAoKSA9PiB7XG4gICAgICAgIHNldFNob3dpbmdEYXRlKGQgPT4gIWQpXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFdpdGggdmFsdWU9e3Nob3dpbmdEYXRlfT57KGlzU2hvd2luZ0RhdGUpID0+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9e3RvZ2dsZURhdGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtpc1Nob3dpbmdEYXRlID8gZGF0ZSA6IHRpbWV9IC8+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgfTwvV2l0aD5cbiAgICApXG59XG4iLCAiaW1wb3J0IHsgRm9yLCBXaXRoLCBjcmVhdGVCaW5kaW5nIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBjcmVhdGVTdWJwcm9jZXNzIH0gZnJvbSBcImFncy9wcm9jZXNzXCJcbmltcG9ydCBIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCJcblxuXG5leHBvcnQgZnVuY3Rpb24gSHlwcmxhbmRUaXRsZUhzKCkge1xuICAgIGNvbnN0IGh5cHJsYW5kVGl0bGUgPSBjcmVhdGVTdWJwcm9jZXNzKFwiXCIsIFwiaHlwcmxhbmQtdGl0bGVcIiwgeCA9PiB4KVxuICAgIHJldHVybiAoPFdpdGggdmFsdWU9e2h5cHJsYW5kVGl0bGV9PnsodGl0bGUpID0+IDxsYWJlbCBsYWJlbD17dGl0bGV9IC8+fTwvV2l0aD4pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIeXBybGFuZFRpdGxlKCkge1xuICAgIGNvbnN0IGh5cHIgPSBIeXBybGFuZC5nZXRfZGVmYXVsdCgpXG4gICAgY29uc3QgZm9jdXNlZENsaWVudEJpbmQgPSBjcmVhdGVCaW5kaW5nKGh5cHIsIFwiZm9jdXNlZENsaWVudFwiKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3g+XG4gICAgICAgICAgICA8V2l0aCB2YWx1ZT17Zm9jdXNlZENsaWVudEJpbmR9PnsoZm9jdXNlZENsaWVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlQmluZCA9IGNyZWF0ZUJpbmRpbmcoZm9jdXNlZENsaWVudCwgXCJ0aXRsZVwiKVxuICAgICAgICAgICAgICAgIHJldHVybiA8Ym94PjxXaXRoIHZhbHVlPXt0aXRsZUJpbmR9PnsodGl0bGUpID0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17dGl0bGV9IC8+XG4gICAgICAgICAgICAgICAgfTwvV2l0aD48L2JveD5cbiAgICAgICAgICAgIH19PC9XaXRoPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIeXBybGFuZEZ1bGxzY3JlZW4oKSB7XG4gICAgY29uc3QgaHlwciA9IEh5cHJsYW5kLmdldF9kZWZhdWx0KClcbiAgICAvLyBUaGUgXCJoYXNmdWxsc2NyZWVuXCIgcHJvcCBvbiBcImZvY3VzZWRXb3Jrc3BhY2VcIiBzZWVtcyBsaWtlIGl0IHNob3VsZCB3b3JrIGZvclxuICAgIC8vIHRoaXMgcHVycG9zZSwgYnV0IGl0IGRvZXNuJ3QsIHNvIGp1c3QgbG9va2luZyBhIHRoZSBjdXJyZW50IGNsaWVudFxuICAgIGNvbnN0IGZvY3VzZWRDbGllbnRCaW5kID0gY3JlYXRlQmluZGluZyhoeXByLCBcImZvY3VzZWRDbGllbnRcIilcbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94PlxuICAgICAgICAgICAgPFdpdGggdmFsdWU9e2ZvY3VzZWRDbGllbnRCaW5kfT57KGNsaWVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZ1bGxzY3JlZW5CaW5kID0gY3JlYXRlQmluZGluZyhjbGllbnQsIFwiZnVsbHNjcmVlblwiKVxuICAgICAgICAgICAgICAgIHJldHVybiA8Ym94PjxXaXRoIHZhbHVlPXtmdWxsc2NyZWVuQmluZH0+eyhmdWxsc2NyZWVuKSA9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9e1wiZnVsbHNjcmVlblwifSBsYWJlbD17ZnVsbHNjcmVlbiA+IDAgPyBcIkZcIiA6IFwiXCJ9IC8+XG4gICAgICAgICAgICAgICAgfTwvV2l0aD48L2JveD5cbiAgICAgICAgICAgIH19PC9XaXRoPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIeXBybGFuZFdvcmtzcGFjZXMoKSB7XG4gICAgY29uc3QgaHlwciA9IEh5cHJsYW5kLmdldF9kZWZhdWx0KClcbiAgICBjb25zdCB3b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyhoeXByLCBcIndvcmtzcGFjZXNcIilcbiAgICAgICAgLmFzKHdzcyA9PiB3c3Muc29ydCgoYSwgYikgPT4gYS5pZCAtIGIuaWQpKVxuICAgIGNvbnN0IGZvY3VzZWRXb3Jrc3BhY2UgPSBjcmVhdGVCaW5kaW5nKGh5cHIsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxib3g+XG4gICAgICAgICAgICA8V2l0aCB2YWx1ZT17Zm9jdXNlZFdvcmtzcGFjZX0+XG4gICAgICAgICAgICAgICAgeyhmb2N1c2VkV3MpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGJveCBzcGFjaW5nPXs4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb3IgZWFjaD17d29ya3NwYWNlc30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyh3cywgXykgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHdzLmZvY3VzKCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz17d3MgPT09IGZvY3VzZWRXcyA/IFwiZm9jdXNlZFwiIDogXCJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3dzLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgPC9ib3g+XG4gICAgKVxufVxuIiwgImltcG9ydCB7IFdpdGggfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgeyBjcmVhdGVTdWJwcm9jZXNzIH0gZnJvbSBcImFncy9wcm9jZXNzXCJcbmltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tIFwiYWdzL3RpbWVcIlxuXG5jb25zdCBsYWJlbGVkID0gKGxibDogc3RyaW5nLCB3aWRnZXQ6IEpTWC5FbGVtZW50KSA9PlxuICAgIDxib3ggc3BhY2luZz17NH0+XG4gICAgICAgIDxsYWJlbCBsYWJlbD17bGJsfSAvPlxuICAgICAgICB7d2lkZ2V0fVxuICAgIDwvYm94PlxuXG5leHBvcnQgZnVuY3Rpb24gQ3B1TW9uaXRvcigpIHtcbiAgICBjb25zdCBjcHUgPSBjcmVhdGVTdWJwcm9jZXNzKFwiXCIsIFwiY3B1LXBjdC5zaFwiLCB4ID0+IHgpXG4gICAgcmV0dXJuIGxhYmVsZWQoXCJDOlwiLCA8V2l0aCB2YWx1ZT17Y3B1fT57KGNwdSkgPT4gPGxhYmVsIGxhYmVsPXtjcHV9IC8+fTwvV2l0aD4pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNZW1vcnlNb25pdG9yKCkge1xuICAgIGNvbnN0IG1lbW9yeSA9IGNyZWF0ZVBvbGwoXCJcIiwgMjAwMCwgXCJmcmVlXCIsIG91dCA9PiB7XG4gICAgICAgIGNvbnN0IG1lbUxpbmUgPSBvdXRcbiAgICAgICAgICAgIC5zcGxpdCgnXFxuJylcbiAgICAgICAgICAgIC5maW5kKGxpbmUgPT4gbGluZS5pbmNsdWRlcygnTWVtOicpKVxuICAgICAgICBjb25zdCB0b2tlbnMgPSBtZW1MaW5lID8gbWVtTGluZS5zcGxpdCgvXFxzKy8pIDogW1wiMVwiLCBcIjBcIl1cbiAgICAgICAgY29uc3QgYXZhaWwgPSBwYXJzZUludCh0b2tlbnNbMl0pXG4gICAgICAgIGNvbnN0IHVzZWQgPSBwYXJzZUludCh0b2tlbnNbMV0pXG4gICAgICAgIHJldHVybiBgJHtNYXRoLnJvdW5kKDEwMCAqIGF2YWlsIC8gdXNlZCl9YFxuICAgIH0pXG4gICAgcmV0dXJuIGxhYmVsZWQoXCJNOlwiLCA8V2l0aCB2YWx1ZT17bWVtb3J5fT57KG1lbSkgPT4gPGxhYmVsIGxhYmVsPXttZW19IC8+fTwvV2l0aD4pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBWb2x1bWVNb25pdG9yKCkge1xuICAgIGNvbnN0IHZvbCA9IGNyZWF0ZVBvbGwoXCJcIiwgMjAwMCwgXCJwYW1peGVyIC0tZ2V0LXZvbHVtZVwiKVxuICAgIHJldHVybiBsYWJlbGVkKFwiTTpcIiwgPFdpdGggdmFsdWU9e3ZvbH0+eyh2b2wpID0+IDxsYWJlbCBsYWJlbD17dm9sfSAvPn08L1dpdGg+KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gTmV0TW9uaXRvcigpIHtcbiAgICBjb25zdCBuZXQgPSBjcmVhdGVTdWJwcm9jZXNzKFwiXCIsIFwibmV0d29yay10cmFmZmljLnNoXCIsIHggPT4geClcbiAgICByZXR1cm4gbGFiZWxlZChcIk46IFwiLCA8V2l0aCB2YWx1ZT17bmV0fT57KG5ldCkgPT5cbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBjbGFzcz17XCJuZXR3b3JrXCJ9XG4gICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgIGxhYmVsPXtuZXR9XG4gICAgICAgIC8+XG4gICAgfTwvV2l0aD4pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBTdGF0dXNNb25pdG9ycygpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94IHNwYWNpbmc9ezEyfT5cbiAgICAgICAgICAgIDxDcHVNb25pdG9yIC8+XG4gICAgICAgICAgICA8TWVtb3J5TW9uaXRvciAvPlxuICAgICAgICAgICAgPFZvbHVtZU1vbml0b3IgLz5cbiAgICAgICAgICAgIDxOZXRNb25pdG9yIC8+XG4gICAgICAgIDwvYm94PlxuICAgIClcbn1cbiIsICJpbXBvcnQgQXN0YWxUcmF5IGZyb20gXCJnaTovL0FzdGFsVHJheVwiXG5pbXBvcnQgeyBGb3IsIGNyZWF0ZUJpbmRpbmcgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRyYXkoKSB7XG4gICAgY29uc3QgdHJheSA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpXG4gICAgY29uc3QgaXRlbXMgPSBjcmVhdGVCaW5kaW5nKHRyYXksIFwiaXRlbXNcIilcblxuICAgIGNvbnN0IGluaXQgPSAoYnRuOiBHdGsuTWVudUJ1dHRvbiwgaXRlbTogQXN0YWxUcmF5LlRyYXlJdGVtKSA9PiB7XG4gICAgICAgIGJ0bi5tZW51TW9kZWwgPSBpdGVtLm1lbnVNb2RlbFxuICAgICAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApXG4gICAgICAgIGl0ZW0uY29ubmVjdChcIm5vdGlmeTo6YWN0aW9uLWdyb3VwXCIsICgpID0+IHtcbiAgICAgICAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKFwiZGJ1c21lbnVcIiwgaXRlbS5hY3Rpb25Hcm91cClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Ym94PlxuICAgICAgICAgICAgPEZvciBlYWNoPXtpdGVtc30+XG4gICAgICAgICAgICAgICAgeyhpdGVtKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxtZW51YnV0dG9uICQ9eyhzZWxmKSA9PiBpbml0KHNlbGYsIGl0ZW0pfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWFnZSBnaWNvbj17Y3JlYXRlQmluZGluZyhpdGVtLCBcImdpY29uXCIpfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICA8L2JveD5cbiAgICApXG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlQ29tcHV0ZWQsIGNyZWF0ZUJpbmRpbmcgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuXG5pbXBvcnQgRGF0ZURpc3BsYXkgZnJvbSBcIi4vRGF0ZURpc3BsYXlcIlxuaW1wb3J0IHsgSHlwcmxhbmRUaXRsZSwgSHlwcmxhbmRGdWxsc2NyZWVuLCBIeXBybGFuZFdvcmtzcGFjZXMgfSBmcm9tIFwiLi9IeXBybGFuZFwiXG5pbXBvcnQgeyBTdGF0dXNNb25pdG9ycyB9IGZyb20gXCIuL1N0YXR1c01vbml0b3JzXCJcbmltcG9ydCBUcmF5IGZyb20gXCIuL1RyYXlcIlxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJhcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICAgIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCB9ID0gQXN0YWwuV2luZG93QW5jaG9yXG5cbiAgICBjb25zdCByaWdodEJveCA9XG4gICAgICAgIDxib3hcbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgIHNwYWNpbmc9ezE0fVxuICAgICAgICAgICAgaG9tb2dlbmVvdXM9e2ZhbHNlfVxuICAgICAgICA+XG4gICAgICAgICAgICA8U3RhdHVzTW9uaXRvcnMgLz5cbiAgICAgICAgICAgIDxUcmF5IC8+XG4gICAgICAgICAgICA8RGF0ZURpc3BsYXkgLz5cbiAgICAgICAgPC9ib3g+XG5cblxuICAgIHJldHVybiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAgIHZpc2libGVcbiAgICAgICAgICAgIG5hbWU9XCJiYXJcIlxuICAgICAgICAgICAgY2xhc3M9XCJiYXJcIlxuICAgICAgICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgICAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICAgICAgICBhbmNob3I9e1RPUCB8IExFRlQgfCBSSUdIVH1cbiAgICAgICAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxjZW50ZXJib3ggY3NzTmFtZT1cImNlbnRlcmJveFwiPlxuICAgICAgICAgICAgICAgIDxib3ggc3BhY2luZz17OH0gJHR5cGU9XCJzdGFydFwiPlxuICAgICAgICAgICAgICAgICAgICA8SHlwcmxhbmRXb3Jrc3BhY2VzIC8+XG4gICAgICAgICAgICAgICAgICAgIDxib3ggaGFsaWduPXtHdGsuQWxpZ24uRU5EfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxIeXBybGFuZEZ1bGxzY3JlZW4gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgPGJveCAkdHlwZT1cImNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICA8SHlwcmxhbmRUaXRsZSAvPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggJHR5cGU9XCJlbmRcIj5cbiAgICAgICAgICAgICAgICAgICAge3JpZ2h0Qm94fVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPC9jZW50ZXJib3g+XG4gICAgICAgIDwvd2luZG93ID5cbiAgICApXG59XG4iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCJcbmltcG9ydCBzdHlsZSBmcm9tIFwiLi9zdHlsZS5zY3NzXCJcbmltcG9ydCBCYXIgZnJvbSBcIi4vd2lkZ2V0L0JhclwiXG5cbmFwcC5zdGFydCh7XG4gICAgY3NzOiBzdHlsZSxcbiAgICBtYWluKCkge1xuICAgICAgICBhcHAuZ2V0X21vbml0b3JzKCkubWFwKEJhcilcbiAgICB9LFxufSlcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsU0FBUyxTQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWSxLQUE4QkEsUUFBdUI7QUFDNUUsU0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNQSxPQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFDL0Q7QUFFQSxTQUFTLE1BQXdCLE9BQVUsTUFBZ0M7QUFDdkUsU0FBTyxlQUFlLE9BQU8sTUFBTTtBQUFBLElBQy9CLE1BQU07QUFDRixhQUFPLEtBQUssT0FBTyxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sWUFBWSxNQUFNO0FBQ2hFLFFBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsUUFBTSxZQUFZLFdBQVcsVUFBVTtBQUN2QyxRQUFNLFlBQVksV0FBVyxZQUFZO0FBQzdDLENBQUM7QUFFRCxNQUFNLFNBQVMsT0FBTyxtQkFBbUIsR0FBRyxDQUFDLEVBQUUsT0FBTyxNQUFNO0FBQ3hELFFBQU0sT0FBTyxXQUFXLFNBQVM7QUFDckMsQ0FBQztBQUVELE1BQU0sU0FBUyxPQUFPLHFCQUFxQixHQUFHLENBQUMsRUFBRSxTQUFTLFdBQVcsT0FBTyxNQUFNO0FBQzlFLFFBQU0sUUFBUSxXQUFXLE9BQU87QUFDaEMsUUFBTSxVQUFVLFdBQVcsVUFBVTtBQUNyQyxRQUFNLFVBQVUsV0FBVyxTQUFTO0FBQ3BDLFFBQU0sT0FBTyxXQUFXLE9BQU87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QSxFQUNOLEtBQUs7QUFBQSxFQUNMLE9BQU87QUFDSCxnQkFBSSxhQUFhLEVBQUUsSUFBSSxHQUFHO0FBQUEsRUFDOUI7QUFDSixDQUFDOyIsCiAgIm5hbWVzIjogWyJwYXRjaCIsICJIeXBybGFuZCIsICJUcmF5IiwgInNuYWtlaWZ5IiwgInNuYWtlaWZ5IiwgImdldHRlciIsICJzZXR0ZXIiLCAiZ2V0dGVyIiwgInNldHRlciIsICJzaWduYWxOYW1lIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgInNpZ25hbCIsICJ2YWx1ZSIsICJ0aW1lb3V0IiwgInNldCIsICJuYW1lIiwgImFyZ3MiLCAiX2EiLCAiYXBwIiwgIkdPYmplY3QiLCAiR09iamVjdCIsICJfYSIsICJzaWduYWwiLCAiR09iamVjdCIsICJHaW8iLCAiR0xpYiIsICJHT2JqZWN0IiwgInNldCIsICJHaW8iLCAiZ2V0dGVyIiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJyZW1vdmUiLCAicmVtb3ZlIiwgIkdPYmplY3QiLCAiR0xpYiIsICJfY3Vyc29yVGhlbWVfZGVjIiwgIl9pY29uVGhlbWVfZGVjIiwgIl9ndGtUaGVtZV9kZWMiLCAiX2EiLCAiX2luaXQiLCAiR2lvIiwgIl8iLCAic2lnbmFsIiwgIkd0ayIsICJHZGsiLCAiR2lvIiwgIkdMaWIiLCAiX2EiLCAiX2luaXQiLCAiR2lvIiwgInNpZ25hbCIsICJHTGliIiwgIl9hIiwgIl9pbml0IiwgImludGVydmFsIiwgInNpZ25hbCIsICJzZXQiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR3RrIiwgInNldHRlciIsICJjc3MiLCAiR2lvIiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiY3B1IiwgInZvbCIsICJuZXQiLCAiR3RrIiwgIkd0ayJdCn0K

EOF

LD_PRELOAD="/nix/store/pydbicgwnqfl664wqb5kr2vaaxgzl9rz-gtk4-layer-shell-1.1.1/lib/libgtk4-layer-shell.so" /nix/store/h6v9s4vair528dcxmh4vd9031clxmhfp-gjs-1.84.2/bin/gjs -m $file $@